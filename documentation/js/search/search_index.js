var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.392,1,0.916]],["body/components/AppComponent.html",[0,0.666,1,1.641,2,1.803,3,0.316,4,0.269,5,1.527,6,1.527,7,1.527,8,1.527,9,0.269,10,3.163,11,1.404,12,2.555,13,2.555,14,2.333,15,1.961,16,5.377,17,1.961,18,4.867,19,0.316,20,0.469,21,2.826,22,0.224,23,0.032,24,0.85,25,1.19,26,1.096,27,4.063,28,0.85,29,3.79,30,0.645,31,0.71,32,0.316,33,0.778,34,1.527,35,1.961,36,1.961,37,1.527,38,2.286,39,1.527,40,0.911,41,1.527,42,1.096,43,1.527,44,1.096,45,1.527,46,1.008,47,1.527,48,1.008,49,1.527,50,1.096,51,1.527,52,1.527,53,1.096,54,1.527,55,1.527,56,1.008,57,1.407,58,1.527,59,1.096,60,1.527,61,1.527,62,0.024,63,0.024]],["title/modules/AppModule.html",[64,2.644,65,2.042]],["body/modules/AppModule.html",[0,0.643,1,1.741,3,0.222,4,0.189,9,0.189,21,1.398,22,0.157,23,0.033,24,0.597,30,1.07,31,0.498,32,0.222,33,0.546,42,1.561,44,1.561,46,1.542,48,1.48,50,1.561,53,1.561,56,1.48,57,1.106,59,1.561,62,0.019,63,0.019,65,4.126,66,1.931,67,2.465,68,2.221,69,2.221,70,2.221,71,3.13,72,3.192,73,2.221,74,1.931,75,1.931,76,3.824,77,3.824,78,3.824,79,3.824,80,1.542,81,1.398,82,2.66,83,1.715,84,2.66,85,2.66,86,1.931,87,2.66,88,2.66,89,2.66,90,2.66,91,1.715,92,2.66,93,2.66,94,2.66,95,2.66,96,3.192,97,2.838,98,1.542,99,1.542,100,0.935,101,1.275,102,3.824,103,2.221,104,2.221,105,2.66,106,2.66,107,2.217,108,2.66,109,2.01,110,1.931,111,1.931,112,2.66,113,3.824,114,2.221,115,2.01,116,1.931,117,1.931,118,2.347,119,1.931,120,2.221,121,2.221,122,2.776,123,2.221,124,1.931,125,1.715,126,1.715,127,1.931,128,4.329,129,2.221,130,2.221,131,2.221,132,2.221,133,2.221,134,2.66,135,2.66,136,2.66,137,2.221,138,0.65,139,1.295,140,0.769,141,2.221,142,2.66,143,1.931,144,2.66,145,2.66,146,2.486,147,2.66,148,2.66,149,2.66,150,1.931,151,1.072,152,2.221,153,2.66,154,1.072,155,2.66,156,2.66,157,2.221]],["title/components/ButtonComponent.html",[0,0.392,42,0.916]],["body/components/ButtonComponent.html",[0,0.543,1,0.74,2,1.378,3,0.213,4,0.182,5,1.031,6,1.031,7,1.031,8,1.031,9,0.182,11,0.948,12,2.381,13,2.381,15,1.498,17,1.498,19,0.213,20,0.358,22,0.324,23,0.033,24,1.078,25,1.168,26,1.075,28,1.308,30,0.869,31,0.479,32,0.213,33,0.525,34,1.031,35,1.498,36,1.498,37,1.031,38,1.937,39,1.031,40,0.82,41,1.031,42,1.39,43,1.031,44,0.74,45,1.031,46,0.681,47,1.031,48,0.681,49,1.031,50,0.74,51,1.031,52,1.031,53,0.74,54,1.031,55,1.031,56,0.681,57,1.075,58,1.031,59,0.74,60,1.031,61,1.031,62,0.018,63,0.018,100,1.175,101,1.227,138,0.909,139,0.74,140,1.075,158,2.136,159,1.168,160,1.623,161,3.656,162,4.38,163,3.719,164,1.528,165,0.869,166,4.38,167,4.38,168,4.38,169,0.989,170,4.808,171,1.781,172,2.699,173,3.099,174,2.96,175,3.719,176,4.38,177,3.719,178,4.38,179,1.031,180,2.559,181,0.626,182,2.823,183,2.559,184,2.559,185,3.656,186,2.559,187,3.719,188,2.136,189,3.719,190,0.989,191,1.267,192,2.559,193,3.656,194,4.38,195,2.559,196,4.013,197,2.559,198,2.397,199,2.397,200,2.559,201,2.559,202,3.18,203,3.719,204,2.559,205,1.649,206,1.031,207,2.155,208,2.136,209,2.136,210,1.345,211,3.719,212,2.559,213,2.559,214,3.719,215,4.38,216,3.719,217,1.031,218,2.559,219,2.559,220,1.345,221,1.857,222,1.345,223,2.136,224,1.782,225,2.559,226,1.782,227,1.123,228,1.227,229,2.559,230,1.857,231,2.136,232,1.857,233,1.857,234,2.559,235,2.136]],["title/injectables/GlobalStoreService.html",[236,0.916,237,1.665]],["body/injectables/GlobalStoreService.html",[3,0.36,4,0.306,9,0.306,14,2.069,19,0.36,20,0.509,22,0.311,23,0.032,24,1.184,28,1.184,30,0.899,31,0.808,32,0.36,33,0.886,40,0.808,62,0.026,63,0.026,100,1.453,138,1.291,139,1.248,140,1.527,164,1.518,165,0.971,179,1.739,181,1.055,236,1.527,237,2.776,238,2.069,239,4.763,240,3.307,241,3.603,242,3.678,243,5.281,244,2.502,245,2.269]],["title/interfaces/HandleListModel.html",[246,0.65,247,2.042]],["body/interfaces/HandleListModel.html",[3,0.39,4,0.332,9,0.332,19,0.39,20,0.534,22,0.373,23,0.031,24,1.324,32,0.39,62,0.027,63,0.027,246,0.96,247,3.572,248,1.884,249,3.904,250,3.937,251,4.93]],["title/components/HeaderComponent.html",[0,0.392,44,0.916]],["body/components/HeaderComponent.html",[0,0.582,1,0.838,2,1.506,3,0.242,4,0.206,5,1.168,6,1.168,7,1.168,8,1.168,9,0.206,11,1.074,12,2.441,13,2.441,15,1.638,17,1.638,19,0.242,20,0.392,22,0.24,23,0.032,28,1.053,30,0.692,31,0.543,32,0.242,33,0.595,34,1.168,35,1.638,36,1.638,37,1.168,38,2.05,39,1.168,40,0.879,41,1.168,42,0.838,43,1.168,44,1.471,45,1.168,46,0.771,47,1.168,48,0.771,49,1.168,50,0.838,51,1.168,52,1.168,53,0.838,54,1.168,55,1.168,56,0.771,57,1.176,58,1.168,59,0.838,60,1.168,61,1.168,62,0.02,63,0.02,138,0.994,140,1.176,146,1.949,159,1.277,160,1.739,164,1.249,165,0.493,169,1.082,171,1.885,174,1.681,181,0.709,190,0.771,191,1.176,206,1.168,220,2.675,222,2.468,224,1.39,226,1.39,228,1.949,237,2.816,240,1.681,252,2.42,253,4.695,254,4.695,255,4.065,256,3.694,257,2.42,258,2.899,259,2.899,260,2.899,261,2.105,262,2.105,263,3.393,264,4.065,265,3.393,266,1.681,267,2.95,268,3.919,269,3.026,270,3.454,271,3.026,272,3.026,273,3.106,274,2.721,275,3.408,276,2.62,277,2.105,278,2.899,279,2.42,280,2.357,281,2.357,282,1.869,283,2.899,284,2.42,285,2.105,286,1.869,287,2.899,288,2.42,289,2.899,290,1.869,291,2.899,292,1.681,293,1.681,294,2.105,295,2.105]],["title/components/HomeComponent.html",[0,0.392,46,0.843]],["body/components/HomeComponent.html",[0,0.527,1,0.702,2,1.326,3,0.203,4,0.172,5,0.979,6,0.979,7,0.979,8,0.979,9,0.172,11,0.9,12,2.354,13,2.354,15,1.442,17,1.442,19,0.203,20,0.345,21,3.029,22,0.334,23,0.032,24,1.393,25,1.571,26,1.446,28,1.292,30,0.798,31,0.455,32,0.203,33,0.498,34,0.979,35,1.442,36,1.442,37,0.979,38,1.889,39,0.979,40,0.878,41,0.979,42,0.702,43,0.979,44,0.702,45,0.979,46,1.248,47,0.979,48,0.646,49,0.979,50,0.702,51,1.712,52,0.979,53,0.702,54,0.979,55,0.979,56,0.646,57,1.035,58,0.979,59,0.702,60,0.979,61,0.979,62,0.018,63,0.018,97,3.218,98,1.408,99,1.408,107,1.408,109,1.277,110,1.763,111,1.763,138,0.875,139,0.702,146,1.716,150,3.797,151,1.442,152,3.548,154,2.236,159,1.124,160,1.575,164,1.683,165,1.006,169,0.952,171,1.738,181,0.875,190,1.131,191,1.446,237,2.628,240,1.408,242,2.74,250,1.566,256,3.405,257,2.028,261,1.763,262,1.763,263,2.988,265,2.988,296,2.028,297,4.251,298,3.58,299,3.63,300,3.58,301,4.69,302,3.58,303,2.429,304,3.58,305,2.429,306,3.086,307,2.429,308,3.915,309,2.429,310,2.429,311,3.58,312,2.429,313,3.58,314,2.429,315,2.429,316,2.429,317,2.028,318,2.028,319,2.598,320,2.028,321,3.58,322,3.58,323,3.58,324,2.429]],["title/interfaces/IconsModel.html",[182,2.042,246,0.65]],["body/interfaces/IconsModel.html",[3,0.382,4,0.325,9,0.325,19,0.382,20,0.527,22,0.323,23,0.031,30,0.779,32,0.382,62,0.027,63,0.027,165,0.931,173,2.949,182,3.526,193,5.308,205,2.949,206,1.843,207,2.652,246,0.939,248,1.843,325,3.819,326,6.063,327,6.063]],["title/pipes/KeysPipe.html",[71,1.836,328,2.042]],["body/pipes/KeysPipe.html",[3,0.372,4,0.317,9,0.317,11,1.654,22,0.263,23,0.032,26,1.291,28,1.001,30,0.918,31,0.836,32,0.372,33,0.916,40,1.009,62,0.027,63,0.027,71,3.125,159,1.402,165,0.76,169,1.188,181,1.092,190,1.188,217,1.799,328,2.878,329,4.465,330,3.727,331,4.5,332,3.241,333,4.465,334,4.5,335,4.465,336,5.391,337,2.588,338,3.727,339,4.465,340,4.465,341,4.465,342,4.465]],["title/components/LoggerComponent.html",[0,0.392,48,0.843]],["body/components/LoggerComponent.html",[0,0.524,1,0.697,2,1.319,3,0.39,4,0.171,5,0.972,6,0.972,7,0.972,8,0.972,9,0.171,11,0.893,12,2.351,13,2.351,15,1.434,17,1.434,19,0.201,20,0.343,21,1.268,22,0.339,23,0.033,25,0.757,26,0.697,28,1.048,30,0.72,31,0.452,32,0.201,33,0.495,34,0.972,35,1.434,36,1.434,37,0.972,38,1.883,39,0.972,40,1.011,41,0.972,42,0.697,43,0.972,44,0.697,45,0.972,46,0.642,47,0.972,48,1.244,49,0.972,50,0.697,51,0.972,52,0.972,53,0.697,54,0.972,55,0.972,56,0.642,57,1.03,58,0.972,59,0.697,60,0.972,61,0.972,62,0.018,63,0.018,100,1.219,101,1.156,138,0.87,140,1.602,151,0.972,154,1.705,159,1.118,160,1.568,164,1.388,165,0.41,169,0.947,171,1.732,174,2.064,179,0.972,181,0.59,190,0.642,191,1.03,206,0.972,220,1.872,222,1.872,224,2.711,226,1.156,227,1.858,228,3.011,266,2.064,267,1.398,269,1.555,270,2.728,271,2.295,272,2.728,273,2.064,274,1.398,276,2.295,277,1.751,280,2.064,281,1.398,282,1.555,286,1.555,288,2.013,290,1.555,292,1.398,293,1.398,295,1.751,332,2.585,343,2.013,344,4.233,345,3.561,346,4.233,347,3.561,348,2.412,349,2.412,350,4.233,351,2.013,352,2.013,353,2.585,354,3.561,355,2.972,356,2.972,357,2.412,358,3.533,359,2.412,360,3.393,361,2.412,362,3.533,363,2.412,364,2.412,365,2.412,366,3.533,367,2.013,368,4.674,369,2.295,370,3.533,371,3.214,372,2.585,373,2.972,374,2.728,375,1.555,376,1.751,377,2.412,378,2.412,379,2.412,380,2.412,381,2.013,382,1.751,383,3.363,384,2.972,385,2.412,386,2.412,387,2.412,388,2.013]],["title/injectables/LoggerService.html",[100,0.774,236,0.916]],["body/injectables/LoggerService.html",[3,0.338,4,0.159,9,0.159,14,1.074,19,0.187,20,0.325,22,0.36,23,0.033,24,1.406,25,1.703,26,1.568,28,1.267,30,0.574,31,0.42,32,0.187,33,0.46,40,1.156,62,0.017,63,0.017,100,0.824,118,1.074,138,0.991,139,1.604,154,0.903,164,1.593,165,0.944,169,0.897,181,1.182,190,1.286,191,1.568,198,1.445,206,0.903,217,1.358,224,1.074,226,1.074,228,2.818,236,0.975,238,1.074,245,1.178,251,2.814,290,1.445,293,1.299,334,5.233,337,2.349,338,1.871,355,1.871,356,1.871,358,2.814,360,2.447,362,4.239,366,3.383,371,1.445,374,1.445,375,1.445,384,1.871,388,1.871,389,1.871,390,4.052,391,4.052,392,4.052,393,4.052,394,4.052,395,3.371,396,3.371,397,3.371,398,2.241,399,3.371,400,3.371,401,2.241,402,3.371,403,2.241,404,3.371,405,2.241,406,3.371,407,2.241,408,4.052,409,2.241,410,3.371,411,2.241,412,2.241,413,5.078,414,3.371,415,1.871,416,1.627,417,1.871,418,2.241,419,2.241,420,2.241,421,2.241,422,2.241,423,2.241,424,4.508,425,2.241,426,4.508,427,4.508,428,4.508,429,2.241,430,2.906,431,2.241,432,2.241,433,2.241,434,2.241,435,2.241,436,2.241,437,2.241,438,2.241,439,2.241]],["title/interfaces/LogsModel.html",[246,0.65,337,1.836]],["body/interfaces/LogsModel.html",[3,0.384,4,0.326,9,0.326,19,0.384,20,0.529,22,0.375,23,0.031,24,1.412,32,0.384,40,1.137,62,0.027,63,0.027,154,2.447,246,0.944,248,1.853,337,3.181,440,3.84]],["title/injectables/MediaRecorderService.html",[236,0.916,441,2.042]],["body/injectables/MediaRecorderService.html",[3,0.22,4,0.187,9,0.187,14,1.263,19,0.22,20,0.366,22,0.317,23,0.033,25,1.193,26,1.098,28,1.273,30,0.83,31,0.493,32,0.22,33,0.541,40,0.711,62,0.019,63,0.019,80,1.528,81,1.385,100,1.192,118,2.135,125,1.699,126,3.469,138,0.929,139,1.642,140,1.288,159,0.828,160,1.407,164,1.637,165,0.916,169,1.011,171,1.806,181,0.929,190,1.297,191,1.642,210,1.997,217,1.964,227,1.156,236,1.098,238,1.263,244,1.528,245,1.385,441,2.448,442,4.199,443,4.199,444,2.2,445,5.784,446,3.171,447,3.798,448,4.874,449,4.874,450,2.635,451,4.874,452,3.798,453,3.798,454,2.635,455,3.798,456,2.582,457,2.716,458,2.825,459,2.635,460,2.871,461,3.798,462,2.635,463,2.635,464,2.635,465,3.798,466,4.454,467,2.635,468,2.448,469,2.635,470,2.635,471,2.635,472,2.635,473,2.635,474,2.635,475,4.313,476,2.635,477,2.635,478,2.635,479,2.635,480,2.635,481,2.635,482,3.798,483,2.2,484,2.635,485,2.635,486,2.635,487,2.635,488,2.635,489,2.635,490,2.635,491,2.635,492,2.635,493,3.798,494,3.798,495,3.798,496,2.635,497,2.635,498,3.798,499,3.798,500,2.635,501,2.635,502,2.635]],["title/injectables/MediaStreamService.html",[236,0.916,503,2.042]],["body/injectables/MediaStreamService.html",[3,0.245,4,0.209,9,0.209,14,1.409,19,0.245,20,0.396,22,0.302,23,0.033,28,1.284,30,0.699,31,0.55,32,0.245,33,0.603,40,0.886,57,0.85,62,0.02,63,0.02,100,1.252,118,1.409,138,1.004,139,1.656,140,1.187,164,1.631,165,0.917,169,1.092,179,1.184,181,1.156,190,1.433,191,1.48,199,1.895,210,2.158,217,2.248,236,1.187,238,1.409,244,1.704,245,1.545,442,4.24,456,3.44,457,2.486,460,2.646,503,2.646,504,4.24,505,2.454,506,4.274,507,4.274,508,4.05,509,4.105,510,4.274,511,4.73,512,4.105,513,2.94,514,2.94,515,4.105,516,4.657,517,2.94,518,4.73,519,3.716,520,2.94,521,4.105,522,2.94,523,4.657,524,2.134,525,2.94,526,2.134,527,2.94,528,2.134,529,3.427,530,2.94,531,4.105,532,2.94,533,2.94,534,2.94,535,5.12,536,2.94]],["title/interfaces/MessageModel.html",[246,0.65,537,2.042]],["body/interfaces/MessageModel.html",[3,0.39,4,0.332,9,0.332,19,0.39,20,0.534,22,0.373,23,0.031,24,1.324,32,0.39,62,0.027,63,0.027,154,2.46,246,0.96,248,1.884,537,3.572,538,3.904,539,5.906]],["title/interfaces/NotificationModel.html",[115,1.665,246,0.65]],["body/interfaces/NotificationModel.html",[3,0.36,4,0.306,9,0.306,19,0.36,20,0.509,21,3.125,22,0.377,23,0.032,24,1.455,32,0.36,62,0.026,63,0.026,115,2.776,146,2.85,150,4.315,154,2.395,165,0.899,246,0.886,248,1.739,540,3.603,541,3.603,542,4.763]],["title/injectables/P2pService.html",[236,0.916,543,2.042]],["body/injectables/P2pService.html",[3,0.118,4,0.1,9,0.1,14,0.678,19,0.118,20,0.226,22,0.361,23,0.033,24,1.104,25,0.941,26,0.866,28,1.281,30,0.708,31,0.265,32,0.118,33,0.29,40,0.895,62,0.012,63,0.012,83,0.911,97,2.67,98,0.82,99,0.82,100,0.852,118,1.436,138,0.572,139,1.763,140,0.677,143,1.699,146,2.111,151,0.943,154,2.282,159,0.444,160,0.867,164,1.585,165,0.964,169,0.623,171,1.29,179,0.57,181,1.168,185,3.222,190,1.373,191,1.332,210,1.831,217,1.856,236,0.677,238,0.678,242,2.839,244,0.82,245,0.743,247,1.931,250,3.256,299,3.344,308,2.908,319,1.699,320,1.18,430,1.509,456,2.553,457,2.655,460,1.931,508,4.26,519,3.987,524,3.747,526,1.026,528,2.802,537,1.509,543,1.509,544,1.18,545,2.501,546,2.996,547,2.996,548,2.996,549,3.86,550,2.996,551,3.483,552,3.483,553,2.996,554,2.996,555,2.341,556,2.341,557,2.341,558,2.341,559,2.908,560,2.341,561,2.341,562,4.404,563,2.341,564,1.414,565,1.414,566,2.341,567,1.414,568,2.341,569,1.414,570,2.341,571,1.414,572,2.341,573,1.414,574,2.341,575,1.414,576,2.341,577,1.414,578,1.414,579,1.414,580,2.341,581,1.414,582,2.341,583,1.414,584,1.414,585,3.483,586,4.924,587,2.341,588,3.86,589,2.341,590,3.483,591,2.341,592,4.404,593,2.341,594,2.908,595,2.341,596,1.414,597,1.414,598,2.996,599,1.414,600,1.414,601,1.414,602,1.414,603,1.414,604,1.414,605,1.414,606,1.414,607,1.414,608,1.414,609,1.414,610,1.414,611,1.414,612,3.86,613,1.414,614,2.341,615,1.414,616,1.414,617,4.404,618,3.845,619,2.341,620,1.414,621,1.414,622,1.414,623,4.607,624,2.341,625,1.414,626,1.414,627,1.414,628,1.414,629,2.996,630,1.414,631,2.996,632,1.414,633,1.414,634,1.414,635,1.414,636,2.341,637,1.414,638,1.414,639,1.414,640,1.414,641,2.996,642,1.414,643,2.996,644,1.414,645,1.18,646,1.414,647,1.414,648,1.414,649,1.414,650,1.414,651,1.414,652,2.996,653,2.341,654,1.414,655,1.414,656,3.483,657,1.414,658,1.414,659,1.414,660,1.414,661,1.414,662,2.341,663,1.414,664,1.414,665,1.414,666,1.414,667,1.414,668,1.414,669,1.414,670,1.414,671,1.414,672,1.414,673,1.414,674,1.414]],["title/components/PushNotificationComponent.html",[0,0.392,50,0.916]],["body/components/PushNotificationComponent.html",[0,0.538,1,0.729,2,1.362,3,0.21,4,0.179,5,1.015,6,1.015,7,1.015,8,1.015,9,0.179,11,0.934,12,2.373,13,2.373,15,1.482,17,1.482,19,0.307,20,0.354,21,1.325,22,0.217,23,0.032,28,0.974,30,0.812,31,0.472,32,0.21,33,0.517,34,1.015,35,1.482,36,1.482,37,1.015,38,1.923,39,1.015,40,0.813,41,1.015,42,0.729,43,1.015,44,0.729,45,1.015,46,0.671,47,1.015,48,0.671,49,1.015,50,1.38,51,2.26,52,1.015,53,0.729,54,1.015,55,1.015,56,0.671,57,1.063,58,1.015,59,0.729,60,1.015,61,1.015,62,0.018,63,0.018,100,1.167,101,1.208,107,2.943,109,2.668,110,1.83,111,1.83,115,1.325,116,1.83,117,1.83,138,0.899,139,0.729,140,1.063,141,4.237,151,1.015,154,1.015,159,1.155,160,1.609,164,1.155,165,0.429,169,0.978,171,1.769,174,1.461,179,1.015,181,0.616,190,0.671,191,1.063,206,1.482,220,2.282,222,1.933,224,2.081,226,2.623,227,2.228,228,2.081,230,3.685,231,4.424,232,2.67,233,2.67,235,2.104,266,2.132,267,1.461,273,1.461,274,1.461,276,1.625,280,1.461,281,2.132,282,3.416,286,1.625,292,2.767,293,2.132,294,2.67,369,1.625,374,2.371,375,2.371,382,1.83,383,2.371,415,3.625,416,3.465,594,2.104,675,3.985,676,2.104,677,4.342,678,4.342,679,3.678,680,2.52,681,2.52,682,2.52,683,3.678,684,3.678,685,3.678,686,2.52,687,3.678,688,3.678,689,2.104,690,3.152,691,2.67,692,1.83,693,1.83,694,2.52,695,3.678,696,3.678,697,2.52,698,2.52,699,2.52,700,4.342,701,2.52,702,2.52,703,2.52,704,2.52,705,2.52,706,2.52,707,2.52,708,3.625,709,1.83,710,2.52,711,2.52]],["title/injectables/PushNotificationService.html",[109,1.665,236,0.916]],["body/injectables/PushNotificationService.html",[3,0.288,4,0.245,9,0.245,14,1.652,19,0.382,20,0.441,22,0.323,23,0.033,25,1.083,26,0.997,28,1.227,30,0.874,31,0.645,32,0.288,33,0.707,40,0.961,62,0.023,63,0.023,100,1.337,107,3.3,109,2.405,115,3.076,116,2.502,117,2.502,118,1.652,138,1.118,139,0.997,140,1.323,143,3.321,146,2.461,151,1.389,164,1.633,165,0.874,169,1.217,179,1.389,181,1.255,190,1.217,191,1.582,227,1.513,236,1.323,238,1.652,244,1.998,245,1.812,306,2.502,317,2.878,542,4.287,545,4.287,712,4.752,713,2.878,714,5.135,715,3.819,716,4.575,717,4.575,718,4.575,719,3.447,720,4.575,721,3.447,722,3.447,723,4.575,724,4.575,725,3.447,726,3.447,727,3.447,728,3.447,729,3.447,730,3.447,731,3.447]],["title/interfaces/RecordModel.html",[246,0.65,468,2.042]],["body/interfaces/RecordModel.html",[3,0.369,4,0.314,9,0.314,19,0.369,20,0.516,22,0.316,23,0.032,30,0.752,32,0.369,62,0.026,63,0.026,80,2.561,81,2.322,125,3.863,165,1.02,246,0.907,248,1.78,457,3.28,468,3.453,475,5.271,732,3.688,733,3.688,734,5.002]],["title/components/SearchEngineComponent.html",[0,0.392,53,0.916]],["body/components/SearchEngineComponent.html",[0,0.461,1,0.564,2,1.123,3,0.163,4,0.138,5,0.785,6,0.785,7,0.785,8,0.785,9,0.138,11,0.722,12,2.234,13,2.234,15,1.221,17,1.221,19,0.253,20,0.292,22,0.296,23,0.033,24,0.437,25,0.952,26,1.212,28,1.195,30,0.633,31,0.365,32,0.163,33,0.4,34,0.785,35,1.221,36,1.497,37,0.785,38,1.689,39,0.785,40,0.9,41,0.785,42,0.564,43,0.785,44,0.564,45,0.785,46,0.519,47,0.785,48,0.519,49,0.785,50,0.564,51,0.785,52,0.785,53,1.212,54,2.146,55,0.785,56,0.519,57,0.876,58,0.785,59,0.564,60,0.785,61,0.785,62,0.015,63,0.015,91,3.575,100,1.025,101,0.934,126,1.257,138,0.741,139,0.564,140,0.876,151,0.785,159,0.952,160,1.377,164,1.552,165,0.883,169,0.806,171,1.553,172,2.2,174,1.13,179,0.785,181,1.025,190,1.115,191,1.5,202,3.489,206,1.689,217,1.221,220,2.527,221,1.415,222,2.527,223,1.627,224,1.782,226,2.009,227,1.33,228,1.452,266,1.757,267,2.43,269,2.702,270,3.343,271,2.702,272,2.702,273,2.908,274,2.632,275,3.043,276,2.702,277,3.043,279,1.627,280,1.757,281,1.757,282,1.257,290,1.953,292,1.757,293,2.155,295,1.415,331,2.529,353,2.2,367,1.627,369,1.257,370,2.529,371,1.257,372,1.415,373,1.627,374,2.702,375,1.953,376,2.2,381,3.79,382,2.698,383,2.396,417,1.627,458,3.007,690,2.2,691,1.415,692,1.415,693,1.415,708,1.627,709,1.415,735,4.545,736,1.627,737,3.03,738,3.717,739,3.03,740,3.03,741,3.03,742,3.03,743,3.717,744,2.529,745,3.03,746,3.03,747,1.949,748,1.949,749,1.949,750,1.949,751,2.396,752,1.949,753,4.188,754,2.529,755,2.529,756,3.043,757,1.949,758,1.627,759,1.949,760,1.949,761,1.949,762,1.949,763,1.949,764,1.949,765,1.949,766,1.949,767,1.949,768,1.949,769,1.949,770,3.03,771,3.03,772,1.949,773,1.949,774,1.949,775,1.949,776,1.949,777,1.949,778,3.717,779,3.03,780,1.949,781,1.627,782,3.03,783,1.949,784,1.949,785,1.949,786,1.949,787,1.949,788,1.949,789,1.949]],["title/interfaces/SearchEngineModel.html",[246,0.65,751,2.042]],["body/interfaces/SearchEngineModel.html",[3,0.391,4,0.333,9,0.333,19,0.391,20,0.535,22,0.327,23,0.031,24,1.326,32,0.391,62,0.027,63,0.027,91,3.023,246,0.962,248,1.889,751,3.578,753,5.103,754,5.103,790,3.915,791,3.915]],["title/interfaces/StylesModel.html",[246,0.65,792,2.299]],["body/interfaces/StylesModel.html",[3,0.386,4,0.328,9,0.328,19,0.386,20,0.531,22,0.325,23,0.031,32,0.386,57,1.76,62,0.027,63,0.027,165,1.036,246,0.949,248,1.863,458,3.655,792,3.997,793,3.861,794,5.079]],["title/components/VideoCallComponent.html",[0,0.392,56,0.843]],["body/components/VideoCallComponent.html",[0,0.346,1,0.371,2,0.8,3,0.107,4,0.091,5,0.517,6,0.517,7,0.517,8,0.517,9,0.091,11,0.475,12,1.97,13,2.096,15,0.87,17,0.87,19,0.305,20,0.208,22,0.301,23,0.033,24,1.123,25,1.244,26,1.146,28,1.217,30,0.783,31,0.24,32,0.107,33,0.263,34,0.517,35,0.87,36,0.87,37,0.517,38,1.32,39,0.517,40,0.614,41,0.517,42,0.371,43,0.517,44,0.371,45,0.517,46,0.341,47,0.517,48,0.341,49,0.517,50,0.371,51,0.517,52,0.517,53,0.371,54,0.517,55,0.517,56,0.872,57,1.668,58,0.517,59,0.371,60,0.517,61,0.517,62,0.011,63,0.011,83,0.827,86,3.984,97,2.564,98,0.744,99,0.744,100,0.801,101,0.615,118,0.615,137,1.802,138,0.528,139,1.55,140,0.808,146,1.035,151,0.517,159,0.678,160,1.035,161,2.333,164,1.616,165,0.809,169,0.574,171,1.214,173,2.113,181,0.528,188,1.071,190,0.973,191,1.279,196,1.071,198,0.827,199,0.827,205,0.827,206,0.517,207,0.744,217,1.126,220,2.631,221,2.029,222,2.57,224,2.12,226,1.035,227,1.438,228,0.615,230,0.931,232,0.931,233,0.931,237,1.723,240,0.744,242,1.801,250,2.715,256,2.029,261,0.931,262,0.931,266,1.62,267,2.119,268,1.071,269,2.113,270,2.357,271,2.113,272,2.113,273,2.296,274,1.62,275,2.029,280,1.62,281,1.251,284,1.071,285,0.931,286,1.392,292,0.744,294,0.931,299,2.029,306,0.931,318,1.802,319,0.931,332,1.567,360,0.931,369,2.553,371,0.827,372,0.931,376,1.567,383,0.827,416,2.029,430,1.392,441,2.715,443,0.931,446,1.071,456,2.564,457,1.135,458,1.251,460,1.392,503,2.715,504,0.931,506,2.736,507,2.736,508,2.029,516,3.052,519,1.567,524,0.931,526,0.931,528,0.931,529,1.802,543,2.715,559,2.736,618,3.052,645,1.071,689,2.333,690,2.654,691,2.029,692,2.379,693,2.379,709,0.931,756,0.931,781,1.802,795,4.582,796,1.071,797,2.159,798,2.159,799,2.795,800,2.159,801,2.795,802,2.795,803,3.656,804,3.656,805,2.795,806,2.795,807,2.159,808,1.283,809,2.795,810,3.277,811,1.283,812,1.283,813,1.283,814,1.283,815,1.283,816,2.159,817,1.283,818,1.283,819,2.736,820,1.283,821,2.795,822,2.795,823,2.795,824,2.795,825,2.795,826,2.795,827,2.795,828,1.283,829,1.283,830,1.283,831,2.159,832,3.277,833,2.159,834,3.656,835,2.159,836,2.159,837,2.159,838,2.159,839,1.283,840,2.159,841,1.283,842,1.283,843,1.283,844,2.159,845,1.283,846,1.283,847,1.283,848,2.159,849,1.283,850,1.283,851,1.283,852,1.283,853,1.283,854,1.283,855,1.283,856,1.283,857,2.795,858,2.159,859,1.283,860,1.283,861,1.283,862,1.283,863,2.159,864,1.283,865,1.283,866,2.795,867,2.159,868,1.283,869,1.283,870,1.283,871,2.159,872,1.283,873,1.283,874,1.283,875,1.283,876,1.283,877,1.283,878,1.283,879,1.283,880,1.071,881,2.159,882,2.795,883,2.159,884,2.159,885,2.795,886,1.283,887,2.795,888,1.283,889,1.283,890,3.841,891,4.602,892,1.283,893,3.277,894,1.283,895,1.283,896,1.283,897,1.283,898,1.283,899,1.283,900,1.283,901,1.283,902,1.283,903,2.159,904,2.159,905,1.283,906,2.159,907,2.159,908,1.283,909,1.283,910,1.283,911,1.283,912,1.283,913,1.283,914,1.283]],["title/components/VideoComponent.html",[0,0.392,59,0.916]],["body/components/VideoComponent.html",[0,0.567,1,0.801,2,1.458,3,0.231,4,0.197,5,1.116,6,1.116,7,1.116,8,1.116,9,0.197,11,1.026,12,2.419,13,2.419,15,1.586,17,1.586,19,0.231,22,0.332,23,0.032,24,0.883,25,0.87,26,0.801,28,1.331,30,0.779,31,0.519,32,0.231,33,0.568,34,1.116,35,1.586,36,1.586,37,1.116,38,2.009,39,1.116,40,0.934,41,1.116,42,0.801,43,1.116,44,0.801,45,1.116,46,0.737,47,1.116,48,0.737,49,1.116,50,0.801,51,1.116,52,1.116,53,0.801,54,1.116,55,1.116,56,0.737,57,1.442,58,1.116,59,1.442,60,1.116,61,1.116,62,0.019,63,0.019,80,1.606,81,1.456,100,1.219,101,1.328,138,0.962,139,0.801,140,1.138,159,1.236,160,1.697,164,1.614,165,0.67,169,1.047,171,1.847,172,2.858,179,1.116,181,0.962,190,1.327,191,1.442,198,2.537,202,3.973,217,1.586,456,3.264,457,2.769,510,4.162,523,2.312,734,4.397,744,3.286,755,3.286,756,3.62,758,3.286,794,3.823,819,3.286,880,2.312,915,2.312,916,4.579,917,3.937,918,4.987,919,3.937,920,3.937,921,4.579,922,3.937,923,2.77,924,2.77,925,2.77,926,2.77,927,2.77,928,2.77,929,2.77,930,2.77,931,2.77,932,2.77,933,2.77,934,2.77,935,2.77,936,2.77,937,2.77]],["title/coverage.html",[938,3.607]],["body/coverage.html",[0,0.743,1,0.889,9,0.218,10,2.566,22,0.181,23,0.032,42,0.889,44,0.889,46,0.818,48,0.818,50,0.889,53,0.889,56,0.818,59,0.889,62,0.021,63,0.021,71,1.782,75,3.789,86,2.232,91,2.73,100,0.752,107,2.455,109,1.616,115,1.616,119,2.232,122,2.232,124,2.232,127,2.232,158,2.566,182,1.982,210,1.616,227,2.875,236,1.636,237,1.616,239,2.566,240,1.782,241,2.566,246,1.212,247,1.982,249,2.566,252,2.566,296,2.566,325,2.566,328,1.982,330,2.566,337,1.782,343,2.566,389,2.566,440,2.566,441,1.982,442,3.074,443,2.232,444,2.566,468,1.982,503,1.982,504,2.232,505,2.566,537,1.982,538,2.566,540,2.566,541,2.566,543,1.982,544,2.566,675,2.566,676,2.566,712,2.566,713,2.566,732,2.566,733,2.566,735,2.566,736,2.566,751,1.982,790,2.566,791,2.566,792,2.232,793,2.566,795,2.566,796,2.566,915,2.566,938,2.566,939,3.075,940,3.075,941,3.075,942,3.075,943,5.906,944,5.993,945,5.219,946,4.844,947,4.235,948,3.075,949,3.075,950,5.797,951,3.075,952,3.075,953,3.075,954,3.075,955,2.566,956,3.535,957,2.566,958,3.535,959,2.566,960,2.566,961,3.075,962,3.075]],["title/dependencies.html",[67,2.455,963,1.92]],["body/dependencies.html",[23,0.033,31,0.778,62,0.025,63,0.025,67,2.679,80,2.99,81,2.712,83,2.679,97,2.409,98,2.409,99,2.409,103,3.469,104,3.469,114,3.469,173,2.679,205,2.679,206,1.674,207,2.99,208,3.469,209,3.469,351,3.469,352,3.469,353,3.017,964,4.156,965,6.299,966,4.156,967,4.156,968,4.156,969,4.156,970,4.156,971,4.156,972,5.159,973,4.156,974,4.156,975,4.156,976,4.156,977,4.156,978,4.156,979,4.156,980,4.156,981,4.156,982,4.156,983,4.156,984,4.156,985,4.156,986,4.156,987,4.156,988,4.156]],["title/index.html",[19,0.221,483,2.208,989,2.645]],["body/index.html",[0,0.676,4,0.277,23,0.025,27,3.259,40,0.731,62,0.025,63,0.025,74,2.834,157,4.141,159,1.226,210,2.052,285,4.393,715,3.259,890,5.133,963,2.834,990,4.961,991,3.904,992,5.452,993,5.452,994,3.259,995,3.904,996,3.904,997,3.904,998,5.922,999,3.904,1000,3.904,1001,3.904,1002,3.904,1003,3.904,1004,3.904,1005,3.904,1006,3.904,1007,3.904,1008,3.904,1009,3.904,1010,5.452,1011,5.452,1012,3.904,1013,5.737,1014,3.904,1015,3.904,1016,3.904,1017,3.904,1018,4.961,1019,4.961,1020,5.737,1021,3.904,1022,4.961,1023,4.961,1024,3.904,1025,3.904,1026,3.904,1027,3.904,1028,4.961,1029,3.904,1030,3.904,1031,3.904,1032,3.904,1033,3.904,1034,5.452,1035,3.904,1036,3.904,1037,3.904,1038,2.834,1039,3.904,1040,3.904]],["title/modules.html",[66,3.137]],["body/modules.html",[23,0.029,62,0.029,63,0.029,65,3.25,66,3.66,81,2.65,207,2.923,1041,5.042,1042,5.042]],["title/overview.html",[1038,3.137]],["body/overview.html",[1,1.792,2,1.499,23,0.032,42,1.603,44,1.603,46,1.475,48,1.475,50,1.603,53,1.603,56,1.475,59,1.603,62,0.025,63,0.025,64,3.377,65,4.257,67,3.27,68,3.377,69,3.377,70,3.377,71,3.213,72,4.235,73,3.377,74,2.937,151,2.044,238,1.939,248,1.63,328,2.608,1038,2.937,1043,4.046,1044,4.046,1045,4.046]],["title/properties.html",[20,0.367,963,1.92]],["body/properties.html",[20,0.489,23,0.03,62,0.029,63,0.029,994,4.235,1046,5.073]],["title/miscellaneous/variables.html",[1047,2.208,1048,3.18]],["body/miscellaneous/variables.html",[0,0.725,19,0.313,22,0.364,23,0.033,24,1.085,25,1.914,26,1.762,46,1.424,48,0.999,56,0.999,57,1.399,62,0.024,63,0.024,75,2.726,96,3.135,119,3.513,120,3.135,121,3.135,122,3.886,123,3.135,124,3.513,125,2.421,126,2.421,127,3.513,128,4.885,129,3.135,130,3.135,131,3.135,132,3.135,133,3.135,199,2.421,430,3.119,458,2.805,955,3.135,956,4.72,957,3.135,958,3.135,959,4.039,960,4.039,1047,3.135,1048,3.135,1049,5.654,1050,4.839,1051,3.756,1052,3.756,1053,3.756,1054,3.756,1055,3.756,1056,4.839]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":227,"title":{},"body":{"components/ButtonComponent.html":{},"components/LoggerComponent.html":{},"injectables/MediaRecorderService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1046,"title":{},"body":{"properties.html":{}}}],["0.11.1",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":415,"title":{},"body":{"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{}}}],["00a1ff",{"_index":357,"title":{},"body":{"components/LoggerComponent.html":{}}}],["040b0d",{"_index":365,"title":{},"body":{"components/LoggerComponent.html":{}}}],["1",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"overview.html":{}}}],["1.1.19",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["1.2.5",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":266,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["100px",{"_index":287,"title":{},"body":{"components/HeaderComponent.html":{}}}],["100vh",{"_index":887,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["100vw",{"_index":885,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["1024",{"_index":831,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["1080",{"_index":838,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["10px",{"_index":383,"title":{},"body":{"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["10s",{"_index":707,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["123",{"_index":997,"title":{},"body":{"index.html":{}}}],["1280",{"_index":833,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["13px",{"_index":373,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{}}}],["14.0.0",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["14.0.6",{"_index":995,"title":{},"body":{"index.html":{}}}],["15000",{"_index":726,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["150px",{"_index":279,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchEngineComponent.html":{}}}],["15px",{"_index":694,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["160px",{"_index":786,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["16331e",{"_index":229,"title":{},"body":{"components/ButtonComponent.html":{}}}],["17px",{"_index":902,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["191817",{"_index":912,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["1920",{"_index":835,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["1a2022",{"_index":277,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{}}}],["1d1c1b",{"_index":695,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["1px",{"_index":293,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["2",{"_index":308,"title":{},"body":{"components/HomeComponent.html":{},"injectables/P2pService.html":{}}}],["2.0.19",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":221,"title":{},"body":{"components/ButtonComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["20px",{"_index":282,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["2b2a29",{"_index":901,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["300px",{"_index":689,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["30px",{"_index":382,"title":{},"body":{"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["333",{"_index":789,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["3a3938",{"_index":908,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["4.18.1",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":223,"title":{},"body":{"components/ButtonComponent.html":{},"components/SearchEngineComponent.html":{}}}],["4px",{"_index":231,"title":{},"body":{"components/ButtonComponent.html":{},"components/PushNotificationComponent.html":{}}}],["4s",{"_index":701,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["5",{"_index":728,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["50",{"_index":284,"title":{},"body":{"components/HeaderComponent.html":{},"components/VideoCallComponent.html":{}}}],["50px",{"_index":781,"title":{},"body":{"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["50vw",{"_index":782,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["545352",{"_index":710,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["555",{"_index":417,"title":{},"body":{"injectables/LoggerService.html":{},"components/SearchEngineComponent.html":{}}}],["576",{"_index":836,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["5px",{"_index":375,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["6",{"_index":1044,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":268,"title":{},"body":{"components/HeaderComponent.html":{},"components/VideoCallComponent.html":{}}}],["7.5.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["70ffd3",{"_index":225,"title":{},"body":{"components/ButtonComponent.html":{}}}],["720",{"_index":837,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["8",{"_index":1045,"title":{},"body":{"overview.html":{}}}],["8px",{"_index":787,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["9",{"_index":1043,"title":{},"body":{"overview.html":{}}}],["90px",{"_index":911,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["999",{"_index":693,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["__console",{"_index":390,"title":{},"body":{"injectables/LoggerService.html":{}}}],["__logs",{"_index":391,"title":{},"body":{"injectables/LoggerService.html":{}}}],["__prefix",{"_index":392,"title":{},"body":{"injectables/LoggerService.html":{}}}],["__stylegen",{"_index":393,"title":{},"body":{"injectables/LoggerService.html":{}}}],["a8b2b5",{"_index":364,"title":{},"body":{"components/LoggerComponent.html":{}}}],["a9ffa3",{"_index":363,"title":{},"body":{"components/LoggerComponent.html":{}}}],["a:hover",{"_index":291,"title":{},"body":{"components/HeaderComponent.html":{}}}],["absolute",{"_index":691,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["activatedroute",{"_index":810,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["active",{"_index":196,"title":{},"body":{"components/ButtonComponent.html":{},"components/VideoCallComponent.html":{}}}],["active:hover",{"_index":905,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["actual_component",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["add",{"_index":715,"title":{},"body":{"injectables/PushNotificationService.html":{},"index.html":{}}}],["add(data",{"_index":718,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["align",{"_index":274,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["already",{"_index":648,"title":{},"body":{"injectables/P2pService.html":{}}}],["angular",{"_index":992,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/MediaRecorderService.html":{},"interfaces/RecordModel.html":{},"components/VideoComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":700,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["answer",{"_index":590,"title":{},"body":{"injectables/P2pService.html":{}}}],["answer.sdp",{"_index":668,"title":{},"body":{"injectables/P2pService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["app.component",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1003,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":334,"title":{},"body":{"pipes/KeysPipe.html":{},"injectables/LoggerService.html":{}}}],["args:any",{"_index":341,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["arial",{"_index":378,"title":{},"body":{"components/LoggerComponent.html":{}}}],["artifacts",{"_index":1014,"title":{},"body":{"index.html":{}}}],["async",{"_index":508,"title":{},"body":{"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["audio",{"_index":529,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{}}}],["audio}).catch(_",{"_index":533,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["authorization",{"_index":883,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["auto",{"_index":286,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["automatically",{"_index":1004,"title":{},"body":{"index.html":{}}}],["await",{"_index":524,"title":{},"body":{"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["background",{"_index":224,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["bg.png",{"_index":889,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["blob",{"_index":475,"title":{},"body":{"injectables/MediaRecorderService.html":{},"interfaces/RecordModel.html":{}}}],["blob(chunks",{"_index":485,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["bold",{"_index":388,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["boolean",{"_index":198,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/LoggerService.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":226,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["bottom",{"_index":292,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["box",{"_index":698,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["break",{"_index":697,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["browse",{"_index":1042,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/MediaRecorderService.html":{},"interfaces/RecordModel.html":{},"components/VideoComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1013,"title":{},"body":{"index.html":{}}}],["button",{"_index":161,"title":{},"body":{"components/ButtonComponent.html":{},"components/VideoCallComponent.html":{}}}],["button'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["button.active",{"_index":234,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.html",{"_index":163,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":162,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:hover",{"_index":907,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["buttoncomponent",{"_index":42,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":413,"title":{},"body":{"injectables/LoggerService.html":{}}}],["c9d3d6",{"_index":288,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{}}}],["calc(100vh",{"_index":886,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["calc(50vw",{"_index":785,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["call",{"_index":250,"title":{},"body":{"interfaces/HandleListModel.html":{},"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["call'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["call.component",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["call.component.html",{"_index":800,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.scss",{"_index":799,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts",{"_index":796,"title":{},"body":{"components/VideoCallComponent.html":{},"coverage.html":{}}}],["call.component.ts:104",{"_index":814,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:108",{"_index":815,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:32",{"_index":845,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:33",{"_index":818,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:34",{"_index":829,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:35",{"_index":843,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:36",{"_index":846,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:37",{"_index":820,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:38",{"_index":839,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:45",{"_index":828,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:53",{"_index":811,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:56",{"_index":830,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:57",{"_index":842,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:58",{"_index":841,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:72",{"_index":817,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:95",{"_index":812,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call.component.ts:99",{"_index":813,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["call/video",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["can't",{"_index":881,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["can\\'t",{"_index":914,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["candidate",{"_index":592,"title":{},"body":{"injectables/P2pService.html":{}}}],["capabilities",{"_index":1032,"title":{},"body":{"index.html":{}}}],["catch(e",{"_index":526,"title":{},"body":{"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["ccc",{"_index":783,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["cdebug",{"_index":438,"title":{},"body":{"injectables/LoggerService.html":{}}}],["center",{"_index":273,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["cerror",{"_index":425,"title":{},"body":{"injectables/LoggerService.html":{}}}],["change",{"_index":1006,"title":{},"body":{"index.html":{}}}],["changeaudio",{"_index":506,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{}}}],["changeicon",{"_index":170,"title":{},"body":{"components/ButtonComponent.html":{}}}],["changes",{"_index":758,"title":{},"body":{"components/SearchEngineComponent.html":{},"components/VideoComponent.html":{}}}],["changes['defaultview",{"_index":934,"title":{},"body":{"components/VideoComponent.html":{}}}],["changes['defaultview']?.currentvalue",{"_index":933,"title":{},"body":{"components/VideoComponent.html":{}}}],["changevideo",{"_index":507,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{}}}],["check",{"_index":1037,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1027,"title":{},"body":{"index.html":{}}}],["chunks",{"_index":474,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["chunks.length",{"_index":491,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["chunks.push(e.data",{"_index":480,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["cinfo",{"_index":435,"title":{},"body":{"injectables/LoggerService.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["cli",{"_index":993,"title":{},"body":{"index.html":{}}}],["click",{"_index":178,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clickedicon",{"_index":326,"title":{},"body":{"interfaces/IconsModel.html":{}}}],["clogger",{"_index":410,"title":{},"body":{"injectables/LoggerService.html":{}}}],["close",{"_index":594,"title":{},"body":{"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{}}}],["close:hover",{"_index":711,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["closed",{"_index":643,"title":{},"body":{"injectables/P2pService.html":{}}}],["cluster_appmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1008,"title":{},"body":{"index.html":{}}}],["collection",{"_index":745,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["collection?:any",{"_index":765,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["color",{"_index":228,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["command",{"_index":1028,"title":{},"body":{"index.html":{}}}],["companionid",{"_index":299,"title":{},"body":{"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["companionnovideoimage",{"_index":801,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["compodoc/compodoc",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"overview.html":{}}}],["components/header/header.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["components/home/home.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["components/logger/logger.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["components/push",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["components/search",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["components/ui/button/button.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["components/video",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["components/video/video.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":408,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log(blob",{"_index":490,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["console.log(this.list",{"_index":725,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["const",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{},"components/VideoCallComponent.html":{}}}],["constraints",{"_index":518,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["constructor(globalstore",{"_index":257,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["constructor(logger",{"_index":179,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/LoggerComponent.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoComponent.html":{}}}],["constructor(mediastream",{"_index":808,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["constructor(sanitizer",{"_index":450,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["container",{"_index":369,"title":{},"body":{"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["content",{"_index":272,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["context",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlpanel",{"_index":910,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["controls",{"_index":919,"title":{},"body":{"components/VideoComponent.html":{}}}],["controls?:boolean",{"_index":932,"title":{},"body":{"components/VideoComponent.html":{}}}],["core",{"_index":209,"title":{},"body":{"components/ButtonComponent.html":{},"dependencies.html":{}}}],["cover",{"_index":897,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["coverage",{"_index":938,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":509,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["create(constraints",{"_index":515,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["created",{"_index":399,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createlog",{"_index":395,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createlog(name",{"_index":397,"title":{},"body":{"injectables/LoggerService.html":{}}}],["createpeerconnection",{"_index":551,"title":{},"body":{"injectables/P2pService.html":{}}}],["currenticon",{"_index":166,"title":{},"body":{"components/ButtonComponent.html":{}}}],["cursor",{"_index":232,"title":{},"body":{"components/ButtonComponent.html":{},"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["cwarn",{"_index":432,"title":{},"body":{"injectables/LoggerService.html":{}}}],["data",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{}}}],["data.type",{"_index":609,"title":{},"body":{"injectables/P2pService.html":{}}}],["debug",{"_index":362,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["debug(name",{"_index":400,"title":{},"body":{"injectables/LoggerService.html":{}}}],["declarations",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":289,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorators",{"_index":188,"title":{},"body":{"components/ButtonComponent.html":{},"components/VideoCallComponent.html":{}}}],["deep",{"_index":891,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaulticon",{"_index":327,"title":{},"body":{"interfaces/IconsModel.html":{}}}],["defaultview",{"_index":794,"title":{},"body":{"interfaces/StylesModel.html":{},"components/VideoComponent.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["delay",{"_index":706,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["dependencies",{"_index":67,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroyed",{"_index":674,"title":{},"body":{"injectables/P2pService.html":{}}}],["dev",{"_index":1000,"title":{},"body":{"index.html":{}}}],["development",{"_index":996,"title":{},"body":{"index.html":{}}}],["devurl",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["directives",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1012,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1017,"title":{},"body":{"index.html":{}}}],["display",{"_index":269,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["dist",{"_index":1016,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["domsanitizer",{"_index":451,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["down",{"_index":502,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["dynamic",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":528,"title":{},"body":{"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["e.candidate.candidate",{"_index":628,"title":{},"body":{"injectables/P2pService.html":{}}}],["e.candidate.sdpmid",{"_index":630,"title":{},"body":{"injectables/P2pService.html":{}}}],["e.candidate.sdpmlineindex",{"_index":632,"title":{},"body":{"injectables/P2pService.html":{}}}],["e.streams[0",{"_index":637,"title":{},"body":{"injectables/P2pService.html":{}}}],["e.streams[0].gettracks",{"_index":635,"title":{},"body":{"injectables/P2pService.html":{}}}],["e2e",{"_index":1025,"title":{},"body":{"index.html":{}}}],["e:blobevent",{"_index":479,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["e:rtcpeerconnectioniceevent",{"_index":626,"title":{},"body":{"injectables/P2pService.html":{}}}],["eee",{"_index":295,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{}}}],["el",{"_index":774,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["el.type",{"_index":608,"title":{},"body":{"injectables/P2pService.html":{}}}],["el[element.key]?.tolowercase().indexof(element.searchvalue.tolowercase",{"_index":773,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["elem",{"_index":606,"title":{},"body":{"injectables/P2pService.html":{}}}],["elem.call(data.message",{"_index":611,"title":{},"body":{"injectables/P2pService.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["element:searchenginemodel",{"_index":768,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["end",{"_index":285,"title":{},"body":{"components/HeaderComponent.html":{},"components/VideoCallComponent.html":{},"index.html":{}}}],["endcall",{"_index":552,"title":{},"body":{"injectables/P2pService.html":{}}}],["engine",{"_index":737,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["engine.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["engine.component.html",{"_index":739,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.scss",{"_index":738,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts",{"_index":736,"title":{},"body":{"components/SearchEngineComponent.html":{},"coverage.html":{}}}],["engine.component.ts:12",{"_index":747,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:13",{"_index":761,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:14",{"_index":760,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:15",{"_index":746,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:21",{"_index":752,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:35",{"_index":749,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:41",{"_index":757,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.component.ts:45",{"_index":759,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.model",{"_index":764,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["engine.model.ts",{"_index":791,"title":{},"body":{"interfaces/SearchEngineModel.html":{},"coverage.html":{}}}],["engine/search",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"coverage.html":{}}}],["environment",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":360,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/VideoCallComponent.html":{}}}],["error(name",{"_index":402,"title":{},"body":{"injectables/LoggerService.html":{}}}],["eventemitter",{"_index":185,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/P2pService.html":{}}}],["execute",{"_index":1022,"title":{},"body":{"index.html":{}}}],["existing",{"_index":664,"title":{},"body":{"injectables/P2pService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["express",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["fafilevideo",{"_index":824,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["false",{"_index":199,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{},"miscellaneous/variables.html":{}}}],["false}).catch(_",{"_index":532,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["famicrophone",{"_index":822,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["famicrophoneslash",{"_index":827,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["family",{"_index":377,"title":{},"body":{"components/LoggerComponent.html":{}}}],["faphoneslash",{"_index":821,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["fastop",{"_index":825,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["favideo",{"_index":823,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["favideoslash",{"_index":826,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["ff392f",{"_index":903,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["ff3e52",{"_index":361,"title":{},"body":{"components/LoggerComponent.html":{}}}],["ff6452",{"_index":906,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["ff901c",{"_index":359,"title":{},"body":{"components/LoggerComponent.html":{}}}],["fff",{"_index":294,"title":{},"body":{"components/HeaderComponent.html":{},"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{}}}],["files",{"_index":1007,"title":{},"body":{"index.html":{}}}],["fill",{"_index":703,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["filter",{"_index":742,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["filter(options",{"_index":748,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["filter(options:object",{"_index":775,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["find",{"_index":743,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["find(element",{"_index":750,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["first",{"_index":1030,"title":{},"body":{"index.html":{}}}],["fit",{"_index":896,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["fixed",{"_index":913,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["flex",{"_index":270,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["flexbox",{"_index":368,"title":{},"body":{"components/LoggerComponent.html":{}}}],["font",{"_index":371,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["fontawesome",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":208,"title":{},"body":{"components/ButtonComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":205,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IconsModel.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["forwards",{"_index":705,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["found",{"_index":613,"title":{},"body":{"injectables/P2pService.html":{}}}],["full",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":251,"title":{},"body":{"interfaces/HandleListModel.html":{},"injectables/LoggerService.html":{}}}],["further",{"_index":1033,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1010,"title":{},"body":{"index.html":{}}}],["generated",{"_index":991,"title":{},"body":{"index.html":{}}}],["getstream",{"_index":510,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoComponent.html":{}}}],["getting",{"_index":989,"title":{"index.html":{}},"body":{}}],["geturl",{"_index":918,"title":{},"body":{"components/VideoComponent.html":{}}}],["getusermedia",{"_index":511,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["getusermedia(constraints",{"_index":521,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["global",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["globalstore",{"_index":256,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/VideoCallComponent.html":{}}}],["globalstore.userid",{"_index":263,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["globalstoreservice",{"_index":237,"title":{"injectables/GlobalStoreService.html":{}},"body":{"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["go",{"_index":1036,"title":{},"body":{"index.html":{}}}],["handle",{"_index":663,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleanswer",{"_index":553,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleanswer(message",{"_index":566,"title":{},"body":{"injectables/P2pService.html":{}}}],["handlecandidate",{"_index":554,"title":{},"body":{"injectables/P2pService.html":{}}}],["handlecandidate(message",{"_index":568,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleclose",{"_index":555,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleclose(message",{"_index":570,"title":{},"body":{"injectables/P2pService.html":{}}}],["handlelist",{"_index":546,"title":{},"body":{"injectables/P2pService.html":{}}}],["handlelistmodel",{"_index":247,"title":{"interfaces/HandleListModel.html":{}},"body":{"interfaces/HandleListModel.html":{},"injectables/P2pService.html":{},"coverage.html":{}}}],["handleoffer",{"_index":556,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleoffer(message",{"_index":572,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleready",{"_index":557,"title":{},"body":{"injectables/P2pService.html":{}}}],["handleready(message",{"_index":574,"title":{},"body":{"injectables/P2pService.html":{}}}],["hangup",{"_index":909,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["header",{"_index":253,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["header.component.html",{"_index":255,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":254,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":44,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":222,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["hello",{"_index":311,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":1034,"title":{},"body":{"index.html":{}}}],["hidenotification",{"_index":687,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["home",{"_index":265,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["home.component.html",{"_index":298,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":297,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":46,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":201,"title":{},"body":{"components/ButtonComponent.html":{}}}],["hostlistener('click",{"_index":189,"title":{},"body":{"components/ButtonComponent.html":{}}}],["hostlisteners",{"_index":177,"title":{},"body":{"components/ButtonComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["http://localhost:4000",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1002,"title":{},"body":{"index.html":{}}}],["https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg",{"_index":819,"title":{},"body":{"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["https://you",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":193,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IconsModel.html":{}}}],["iconprop",{"_index":194,"title":{},"body":{"components/ButtonComponent.html":{}}}],["icons",{"_index":173,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IconsModel.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["iconsmodel",{"_index":182,"title":{"interfaces/IconsModel.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/IconsModel.html":{},"coverage.html":{}}}],["id",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{},"components/VideoCallComponent.html":{}}}],["idcall",{"_index":324,"title":{},"body":{"components/HomeComponent.html":{}}}],["ideal",{"_index":832,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["identifier",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["if(!this.mediarecorder",{"_index":493,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["if(!this.statusclick",{"_index":213,"title":{},"body":{"components/ButtonComponent.html":{}}}],["if(e.candidate",{"_index":627,"title":{},"body":{"injectables/P2pService.html":{}}}],["if(elem",{"_index":610,"title":{},"body":{"injectables/P2pService.html":{}}}],["if(element.key.length",{"_index":772,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["if(element.searchvalue",{"_index":769,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["if(stream",{"_index":473,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["if(this.icons?.clickedicon",{"_index":218,"title":{},"body":{"components/ButtonComponent.html":{}}}],["if(this.list.length",{"_index":723,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["if(this.localstream",{"_index":639,"title":{},"body":{"injectables/P2pService.html":{}}}],["if(this.mediarecorder?.state",{"_index":495,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["if(this.pc.signalingstate",{"_index":660,"title":{},"body":{"injectables/P2pService.html":{}}}],["if(this.srcurl",{"_index":935,"title":{},"body":{"components/VideoComponent.html":{}}}],["if(this.userid",{"_index":871,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["if(videotrack",{"_index":862,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["if(videotrack.enabled",{"_index":865,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["ignoring",{"_index":649,"title":{},"body":{"injectables/P2pService.html":{}}}],["img",{"_index":893,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["implements",{"_index":159,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/MediaRecorderService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["important",{"_index":904,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["imports",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["inactive",{"_index":499,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["include",{"_index":370,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["info(name",{"_index":404,"title":{},"body":{"injectables/LoggerService.html":{}}}],["initial",{"_index":385,"title":{},"body":{"components/LoggerComponent.html":{}}}],["inject",{"_index":847,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["inject('usermediap2p",{"_index":840,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["injectable",{"_index":236,"title":{"injectables/GlobalStoreService.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{}},"body":{"injectables/GlobalStoreService.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/GlobalStoreService.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{},"overview.html":{}}}],["input",{"_index":202,"title":{},"body":{"components/ButtonComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoComponent.html":{}}}],["inputs",{"_index":172,"title":{},"body":{"components/ButtonComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoComponent.html":{}}}],["interface",{"_index":246,"title":{"interfaces/HandleListModel.html":{},"interfaces/IconsModel.html":{},"interfaces/LogsModel.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"interfaces/RecordModel.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{}},"body":{"interfaces/HandleListModel.html":{},"interfaces/IconsModel.html":{},"interfaces/LogsModel.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"interfaces/RecordModel.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":248,"title":{},"body":{"interfaces/HandleListModel.html":{},"interfaces/IconsModel.html":{},"interfaces/LogsModel.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"interfaces/RecordModel.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"overview.html":{}}}],["io",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["iscallstarted",{"_index":547,"title":{},"body":{"injectables/P2pService.html":{}}}],["item",{"_index":381,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{}}}],["item.id",{"_index":730,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["items",{"_index":275,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["joinroom",{"_index":558,"title":{},"body":{"injectables/P2pService.html":{}}}],["joinroom(userid",{"_index":576,"title":{},"body":{"injectables/P2pService.html":{}}}],["json",{"_index":353,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"dependencies.html":{}}}],["justify",{"_index":271,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["karma",{"_index":1024,"title":{},"body":{"index.html":{}}}],["key",{"_index":753,"title":{},"body":{"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{}}}],["keyframes",{"_index":686,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["keys",{"_index":331,"title":{},"body":{"pipes/KeysPipe.html":{},"components/SearchEngineComponent.html":{}}}],["keyspipe",{"_index":71,"title":{"pipes/KeysPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["lastelem",{"_index":414,"title":{},"body":{"injectables/LoggerService.html":{}}}],["left",{"_index":281,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["linear",{"_index":702,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["list",{"_index":714,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["literal",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localdefaultview",{"_index":802,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["localoffvideo",{"_index":894,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["localstream",{"_index":548,"title":{},"body":{"injectables/P2pService.html":{}}}],["localvideo",{"_index":892,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["log",{"_index":366,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["log.name",{"_index":356,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["log.type",{"_index":355,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["logger",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["logger'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["logger.component.html",{"_index":345,"title":{},"body":{"components/LoggerComponent.html":{}}}],["logger.component.scss",{"_index":344,"title":{},"body":{"components/LoggerComponent.html":{}}}],["logger/logger.service",{"_index":244,"title":{},"body":{"injectables/GlobalStoreService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{}}}],["loggercomponent",{"_index":48,"title":{"components/LoggerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":100,"title":{"injectables/LoggerService.html":{}},"body":{"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{}}}],["logo",{"_index":278,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logsmodel",{"_index":337,"title":{"interfaces/LogsModel.html":{}},"body":{"pipes/KeysPipe.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"coverage.html":{}}}],["margin",{"_index":280,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["matching",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":317,"title":{},"body":{"components/HomeComponent.html":{},"injectables/PushNotificationService.html":{}}}],["max",{"_index":834,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["mediarecorder",{"_index":445,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["mediarecorder(stream",{"_index":477,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["mediarecorderservice",{"_index":441,"title":{"injectables/MediaRecorderService.html":{}},"body":{"injectables/MediaRecorderService.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["mediastream",{"_index":456,"title":{},"body":{"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["mediastreamconstraints",{"_index":516,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{}}}],["mediastreamservice",{"_index":503,"title":{"injectables/MediaStreamService.html":{}},"body":{"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["message",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{}}}],["message.candidate",{"_index":654,"title":{},"body":{"injectables/P2pService.html":{}}}],["messagemodel",{"_index":537,"title":{"interfaces/MessageModel.html":{}},"body":{"interfaces/MessageModel.html":{},"injectables/P2pService.html":{},"coverage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["methods",{"_index":169,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["mimetype",{"_index":465,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["min",{"_index":267,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["miscellaneous",{"_index":1047,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":367,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{}}}],["mode",{"_index":704,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["model",{"_index":740,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["model?:string",{"_index":767,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["models/logger/logs.model",{"_index":338,"title":{},"body":{"pipes/KeysPipe.html":{},"injectables/LoggerService.html":{}}}],["models/media",{"_index":469,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["models/p2p-connector/handlelist.model",{"_index":603,"title":{},"body":{"injectables/P2pService.html":{}}}],["models/p2p-connector/message.model",{"_index":602,"title":{},"body":{"injectables/P2pService.html":{}}}],["models/push",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{}}}],["models/search",{"_index":763,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["models/ui/button/icons.model",{"_index":204,"title":{},"body":{"components/ButtonComponent.html":{}}}],["module",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":66,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":1035,"title":{},"body":{"index.html":{}}}],["msg",{"_index":586,"title":{},"body":{"injectables/P2pService.html":{}}}],["muted",{"_index":920,"title":{},"body":{"components/VideoComponent.html":{}}}],["muted?:boolean",{"_index":931,"title":{},"body":{"components/VideoComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"index.html":{}}}],["name.replace('%c",{"_index":419,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nav",{"_index":283,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1001,"title":{},"body":{"index.html":{}}}],["navigator.mediadevices.getusermedia(constraints).then(stream",{"_index":525,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["need",{"_index":1029,"title":{},"body":{"index.html":{}}}],["need.ru",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":210,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":890,"title":{},"body":{"components/VideoCallComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchanges",{"_index":744,"title":{},"body":{"components/SearchEngineComponent.html":{},"components/VideoComponent.html":{}}}],["ngonchanges(changes",{"_index":755,"title":{},"body":{"components/SearchEngineComponent.html":{},"components/VideoComponent.html":{}}}],["ngondestroy",{"_index":559,"title":{},"body":{"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["ngoninit",{"_index":171,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/MediaRecorderService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["ngx",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["nodemon",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":290,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/SearchEngineComponent.html":{}}}],["notification",{"_index":677,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["notification.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["notification.component.html",{"_index":679,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification.component.scss",{"_index":678,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification.component.ts",{"_index":676,"title":{},"body":{"components/PushNotificationComponent.html":{},"coverage.html":{}}}],["notification.component.ts:11",{"_index":680,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification.component.ts:15",{"_index":682,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification.component.ts:18",{"_index":681,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification.message",{"_index":685,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification.service",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/PushNotificationComponent.html":{}}}],["notification.service.ts",{"_index":713,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notification.service.ts:10",{"_index":717,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.service.ts:23",{"_index":719,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.service.ts:31",{"_index":721,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.title",{"_index":683,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["notification/notification.model",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{}}}],["notification/notification.model.ts",{"_index":541,"title":{},"body":{"interfaces/NotificationModel.html":{},"coverage.html":{}}}],["notification/push",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notificationmodel",{"_index":115,"title":{"interfaces/NotificationModel.html":{}},"body":{"modules/AppModule.html":{},"interfaces/NotificationModel.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notifications",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/PushNotificationComponent.html":{}}}],["number",{"_index":542,"title":{},"body":{"interfaces/NotificationModel.html":{},"injectables/PushNotificationService.html":{}}}],["object",{"_index":458,"title":{},"body":{"injectables/MediaRecorderService.html":{},"components/SearchEngineComponent.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(changes['collection'].currentvalue[0",{"_index":777,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["objecturl",{"_index":486,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["offer",{"_index":588,"title":{},"body":{"injectables/P2pService.html":{}}}],["offer?.sdp",{"_index":620,"title":{},"body":{"injectables/P2pService.html":{}}}],["offertoreceiveaudio",{"_index":616,"title":{},"body":{"injectables/P2pService.html":{}}}],["onclick",{"_index":176,"title":{},"body":{"components/ButtonComponent.html":{}}}],["oninit",{"_index":160,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/MediaRecorderService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["opacity",{"_index":688,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["optional",{"_index":165,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["options",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/MediaRecorderService.html":{},"components/SearchEngineComponent.html":{},"miscellaneous/variables.html":{}}}],["options:object",{"_index":472,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["out",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":780,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["output",{"_index":203,"title":{},"body":{"components/ButtonComponent.html":{}}}],["outputs",{"_index":175,"title":{},"body":{"components/ButtonComponent.html":{}}}],["overview",{"_index":1038,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p2p-connector",{"_index":803,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["p2pservice",{"_index":543,"title":{"injectables/P2pService.html":{}},"body":{"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["package",{"_index":963,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":374,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["page",{"_index":1040,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":181,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["path",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pc",{"_index":549,"title":{},"body":{"injectables/P2pService.html":{}}}],["pc.createanswer",{"_index":666,"title":{},"body":{"injectables/P2pService.html":{}}}],["pc.createoffer({offertoreceivevideo",{"_index":615,"title":{},"body":{"injectables/P2pService.html":{}}}],["pc.setlocaldescription(answer",{"_index":667,"title":{},"body":{"injectables/P2pService.html":{}}}],["pc.setlocaldescription(offer",{"_index":621,"title":{},"body":{"injectables/P2pService.html":{}}}],["pc.setremotedescription(message).catch(e",{"_index":665,"title":{},"body":{"injectables/P2pService.html":{}}}],["peerconnection",{"_index":652,"title":{},"body":{"injectables/P2pService.html":{}}}],["peerjs",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":328,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({name",{"_index":339,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["pipes",{"_index":329,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["pipes/keys.pipe",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":336,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["platform",{"_index":1026,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":233,"title":{},"body":{"components/ButtonComponent.html":{},"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["position",{"_index":690,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["prefix",{"_index":427,"title":{},"body":{"injectables/LoggerService.html":{}}}],["pretty",{"_index":351,"title":{},"body":{"components/LoggerComponent.html":{},"dependencies.html":{}}}],["prettyprint",{"_index":346,"title":{},"body":{"components/LoggerComponent.html":{}}}],["prettyprintjson",{"_index":350,"title":{},"body":{"components/LoggerComponent.html":{}}}],["print",{"_index":352,"title":{},"body":{"components/LoggerComponent.html":{},"dependencies.html":{}}}],["private",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HomeComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["production",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produrl",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":990,"title":{},"body":{"index.html":{}}}],["promise",{"_index":519,"title":{},"body":{"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"properties.html":{}}}],["property",{"_index":779,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["protected",{"_index":394,"title":{},"body":{"injectables/LoggerService.html":{}}}],["provide",{"_index":797,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["providedin",{"_index":245,"title":{},"body":{"injectables/GlobalStoreService.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{}}}],["providers",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/VideoCallComponent.html":{}}}],["public",{"_index":164,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["push",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["pushnotificationcomponent",{"_index":50,"title":{"components/PushNotificationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pushnotificationservice",{"_index":109,"title":{"injectables/PushNotificationService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["radius",{"_index":230,"title":{},"body":{"components/ButtonComponent.html":{},"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["readonly",{"_index":545,"title":{},"body":{"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{}}}],["ready",{"_index":585,"title":{},"body":{"injectables/P2pService.html":{}}}],["recipient",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"interfaces/NotificationModel.html":{}}}],["record",{"_index":446,"title":{},"body":{"injectables/MediaRecorderService.html":{},"components/VideoCallComponent.html":{}}}],["record?:recordmodel",{"_index":471,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder",{"_index":804,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["recorder.service",{"_index":849,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["recorder.service.ts",{"_index":444,"title":{},"body":{"injectables/MediaRecorderService.html":{},"coverage.html":{}}}],["recorder.service.ts:12",{"_index":464,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder.service.ts:13",{"_index":467,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder.service.ts:17",{"_index":452,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder.service.ts:24",{"_index":454,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder.service.ts:28",{"_index":459,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder.service.ts:55",{"_index":463,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder.service.ts:66",{"_index":462,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder/media",{"_index":443,"title":{},"body":{"injectables/MediaRecorderService.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["recorder/record.model",{"_index":470,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recorder/record.model.ts",{"_index":733,"title":{},"body":{"interfaces/RecordModel.html":{},"coverage.html":{}}}],["recording",{"_index":496,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["recordmodel",{"_index":468,"title":{"interfaces/RecordModel.html":{}},"body":{"injectables/MediaRecorderService.html":{},"interfaces/RecordModel.html":{},"coverage.html":{}}}],["red",{"_index":235,"title":{},"body":{"components/ButtonComponent.html":{},"components/PushNotificationComponent.html":{}}}],["redirectto",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1039,"title":{},"body":{"index.html":{}}}],["relative",{"_index":709,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["reload",{"_index":1005,"title":{},"body":{"index.html":{}}}],["remotedefaultview",{"_index":805,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["remoteoffvideo",{"_index":900,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["remotestream",{"_index":550,"title":{},"body":{"injectables/P2pService.html":{}}}],["remotevideo",{"_index":899,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["remove",{"_index":716,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["remove(id",{"_index":720,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["replace('%c",{"_index":420,"title":{},"body":{"injectables/LoggerService.html":{}}}],["require",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":884,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["reset",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":784,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["results",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":217,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/KeysPipe.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["returns",{"_index":190,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["rgba(255,255,255",{"_index":387,"title":{},"body":{"components/LoggerComponent.html":{}}}],["right",{"_index":416,"title":{},"body":{"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/VideoCallComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalStoreService.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["route",{"_index":809,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["router",{"_index":562,"title":{},"body":{"injectables/P2pService.html":{}}}],["routermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rtcpeerconnection",{"_index":598,"title":{},"body":{"injectables/P2pService.html":{}}}],["run",{"_index":998,"title":{},"body":{"index.html":{}}}],["running",{"_index":1018,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["safeurl",{"_index":734,"title":{},"body":{"interfaces/RecordModel.html":{},"components/VideoComponent.html":{}}}],["sanitizer",{"_index":453,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["sans",{"_index":379,"title":{},"body":{"components/LoggerComponent.html":{}}}],["scaffolding",{"_index":1009,"title":{},"body":{"index.html":{}}}],["scalex",{"_index":895,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["scalex(1",{"_index":898,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["sdp",{"_index":619,"title":{},"body":{"injectables/P2pService.html":{}}}],["sdpmid",{"_index":629,"title":{},"body":{"injectables/P2pService.html":{}}}],["sdpmlineindex",{"_index":631,"title":{},"body":{"injectables/P2pService.html":{}}}],["search",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["searchenginecomponent",{"_index":53,"title":{"components/SearchEngineComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchenginemodel",{"_index":751,"title":{"interfaces/SearchEngineModel.html":{}},"body":{"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"coverage.html":{}}}],["searchresult",{"_index":741,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["searchresult?:object",{"_index":766,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["searchvalue",{"_index":754,"title":{},"body":{"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{}}}],["select",{"_index":778,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["self",{"_index":882,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["send",{"_index":323,"title":{},"body":{"components/HomeComponent.html":{}}}],["sendmediastreaminfo",{"_index":807,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["sendmediastreaminfo(stream",{"_index":816,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["sendnotification",{"_index":300,"title":{},"body":{"components/HomeComponent.html":{}}}],["sendnotification(recipient",{"_index":304,"title":{},"body":{"components/HomeComponent.html":{}}}],["serif",{"_index":380,"title":{},"body":{"components/LoggerComponent.html":{}}}],["serve",{"_index":999,"title":{},"body":{"index.html":{}}}],["server",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["services/global",{"_index":261,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/VideoCallComponent.html":{}}}],["services/logger/logger.service",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["services/media",{"_index":848,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["services/p2p-connector/p2p-connector.service",{"_index":851,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["services/push",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/PushNotificationComponent.html":{}}}],["set",{"_index":321,"title":{},"body":{"components/HomeComponent.html":{}}}],["setinterval",{"_index":722,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["setlocalstream",{"_index":560,"title":{},"body":{"injectables/P2pService.html":{}}}],["setlocalstream(stream",{"_index":580,"title":{},"body":{"injectables/P2pService.html":{}}}],["setstream",{"_index":447,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["setstream(stream",{"_index":455,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["setuserid",{"_index":301,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":699,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["signaling",{"_index":658,"title":{},"body":{"injectables/P2pService.html":{}}}],["simplechange",{"_index":762,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["simplechanges",{"_index":756,"title":{},"body":{"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["size",{"_index":372,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["socket",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["socket.io",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["socketioconfig",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["socketiomodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["socketiomodule.forroot(config",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["solid",{"_index":206,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconsModel.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/header/header.component.ts",{"_index":252,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:12",{"_index":260,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:15",{"_index":259,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:9",{"_index":258,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":296,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:13",{"_index":315,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:14",{"_index":309,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:15",{"_index":312,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:16",{"_index":314,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:17",{"_index":302,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":310,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":305,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:34",{"_index":307,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:39",{"_index":303,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/logger/logger.component.ts",{"_index":343,"title":{},"body":{"components/LoggerComponent.html":{},"coverage.html":{}}}],["src/app/components/logger/logger.component.ts:12",{"_index":347,"title":{},"body":{"components/LoggerComponent.html":{}}}],["src/app/components/logger/logger.component.ts:15",{"_index":349,"title":{},"body":{"components/LoggerComponent.html":{}}}],["src/app/components/logger/logger.component.ts:18",{"_index":348,"title":{},"body":{"components/LoggerComponent.html":{}}}],["src/app/components/push",{"_index":675,"title":{},"body":{"components/PushNotificationComponent.html":{},"coverage.html":{}}}],["src/app/components/search",{"_index":735,"title":{},"body":{"components/SearchEngineComponent.html":{},"coverage.html":{}}}],["src/app/components/ui/button/button.component.ts",{"_index":158,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/ui/button/button.component.ts:14",{"_index":200,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:15",{"_index":195,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:16",{"_index":197,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:18",{"_index":183,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:19",{"_index":184,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:20",{"_index":186,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:22",{"_index":187,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:35",{"_index":180,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/ui/button/button.component.ts:41",{"_index":192,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/video",{"_index":795,"title":{},"body":{"components/VideoCallComponent.html":{},"coverage.html":{}}}],["src/app/components/video/video.component.ts",{"_index":915,"title":{},"body":{"components/VideoComponent.html":{},"coverage.html":{}}}],["src/app/components/video/video.component.ts:12",{"_index":924,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:13",{"_index":926,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:14",{"_index":923,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:15",{"_index":925,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:16",{"_index":922,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:22",{"_index":930,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:24",{"_index":929,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:28",{"_index":928,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/components/video/video.component.ts:33",{"_index":927,"title":{},"body":{"components/VideoComponent.html":{}}}],["src/app/models/logger/logs.model.ts",{"_index":440,"title":{},"body":{"interfaces/LogsModel.html":{},"coverage.html":{}}}],["src/app/models/media",{"_index":732,"title":{},"body":{"interfaces/RecordModel.html":{},"coverage.html":{}}}],["src/app/models/p2p-connector/handlelist.model.ts",{"_index":249,"title":{},"body":{"interfaces/HandleListModel.html":{},"coverage.html":{}}}],["src/app/models/p2p-connector/message.model.ts",{"_index":538,"title":{},"body":{"interfaces/MessageModel.html":{},"coverage.html":{}}}],["src/app/models/push",{"_index":540,"title":{},"body":{"interfaces/NotificationModel.html":{},"coverage.html":{}}}],["src/app/models/search",{"_index":790,"title":{},"body":{"interfaces/SearchEngineModel.html":{},"coverage.html":{}}}],["src/app/models/ui/button/icons.model.ts",{"_index":325,"title":{},"body":{"interfaces/IconsModel.html":{},"coverage.html":{}}}],["src/app/models/video/styles.model.ts",{"_index":793,"title":{},"body":{"interfaces/StylesModel.html":{},"coverage.html":{}}}],["src/app/pipes/keys.pipe.ts",{"_index":330,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["src/app/pipes/keys.pipe.ts:6",{"_index":335,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["src/app/services/global",{"_index":239,"title":{},"body":{"injectables/GlobalStoreService.html":{},"coverage.html":{}}}],["src/app/services/logger/logger.service.ts",{"_index":389,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/services/logger/logger.service.ts:10",{"_index":409,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:11",{"_index":411,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:12",{"_index":412,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:15",{"_index":396,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:21",{"_index":398,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:29",{"_index":403,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:39",{"_index":407,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:49",{"_index":405,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/logger/logger.service.ts:59",{"_index":401,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/services/media",{"_index":442,"title":{},"body":{"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"coverage.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts",{"_index":544,"title":{},"body":{"injectables/P2pService.html":{},"coverage.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:117",{"_index":571,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:128",{"_index":575,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:13",{"_index":584,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:136",{"_index":569,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:14",{"_index":601,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:15",{"_index":599,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:16",{"_index":597,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:162",{"_index":567,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:17",{"_index":600,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:174",{"_index":573,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:18",{"_index":596,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:190",{"_index":565,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:195",{"_index":577,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:202",{"_index":581,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:208",{"_index":579,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:212",{"_index":578,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:40",{"_index":563,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:55",{"_index":583,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/p2p-connector/p2p-connector.service.ts:69",{"_index":564,"title":{},"body":{"injectables/P2pService.html":{}}}],["src/app/services/push",{"_index":712,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srcurl",{"_index":921,"title":{},"body":{"components/VideoComponent.html":{}}}],["start",{"_index":376,"title":{},"body":{"components/LoggerComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["startcall",{"_index":561,"title":{},"body":{"injectables/P2pService.html":{}}}],["startcall(message",{"_index":582,"title":{},"body":{"injectables/P2pService.html":{}}}],["started",{"_index":483,"title":{"index.html":{}},"body":{"injectables/MediaRecorderService.html":{}}}],["startrecording",{"_index":448,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["state",{"_index":659,"title":{},"body":{"injectables/P2pService.html":{}}}],["statements",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["statusclass",{"_index":167,"title":{},"body":{"components/ButtonComponent.html":{}}}],["statusclick",{"_index":168,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stopped",{"_index":492,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["stoprecording",{"_index":449,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["store.service",{"_index":262,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/VideoCallComponent.html":{}}}],["store.service.ts",{"_index":241,"title":{},"body":{"injectables/GlobalStoreService.html":{},"coverage.html":{}}}],["store.service.ts:9",{"_index":243,"title":{},"body":{"injectables/GlobalStoreService.html":{}}}],["store/global",{"_index":240,"title":{},"body":{"injectables/GlobalStoreService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["stored",{"_index":1015,"title":{},"body":{"index.html":{}}}],["stream",{"_index":460,"title":{},"body":{"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["stream.gettracks",{"_index":875,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["stream.service",{"_index":850,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["stream.service.ts",{"_index":505,"title":{},"body":{"injectables/MediaStreamService.html":{},"coverage.html":{}}}],["stream.service.ts:15",{"_index":520,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["stream.service.ts:19",{"_index":522,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["stream.service.ts:30",{"_index":517,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["stream.service.ts:42",{"_index":513,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["stream.service.ts:46",{"_index":514,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["stream.service.ts:9",{"_index":512,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["stream/media",{"_index":504,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoCallComponent.html":{},"coverage.html":{}}}],["stream?.gettracks().find(track",{"_index":859,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HomeComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["stylesmodel",{"_index":792,"title":{"interfaces/StylesModel.html":{}},"body":{"interfaces/StylesModel.html":{},"coverage.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["subscribed",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["super",{"_index":313,"title":{},"body":{"components/HomeComponent.html":{}}}],["support",{"_index":1041,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":207,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IconsModel.html":{},"components/VideoCallComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["t",{"_index":539,"title":{},"body":{"interfaces/MessageModel.html":{}}}],["table",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["test",{"_index":1021,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1031,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1020,"title":{},"body":{"index.html":{}}}],["text",{"_index":174,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["this.__console",{"_index":418,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__console?.error",{"_index":423,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__console?.info",{"_index":434,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__console?.log",{"_index":437,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__console?.warn",{"_index":431,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__logs?.push(log",{"_index":422,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__stylegen('#0cff00",{"_index":439,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__stylegen('#22f0ff",{"_index":436,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__stylegen('#e4ff00",{"_index":426,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__stylegen('#ff3e2b",{"_index":429,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__stylegen('#ff9e00",{"_index":433,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.__stylegen('#ffffff",{"_index":428,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.collection?.filter(el",{"_index":771,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["this.companionid",{"_index":618,"title":{},"body":{"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["this.companionnovideoimage",{"_index":855,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.createlog(this.__prefix",{"_index":424,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.createpeerconnection().then(async",{"_index":614,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.currenticon",{"_index":215,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.defaultview",{"_index":936,"title":{},"body":{"components/VideoComponent.html":{}}}],["this.getusermedia(constraints).catch(_",{"_index":530,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["this.getusermedia({video",{"_index":531,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["this.globalstore.userid",{"_index":318,"title":{},"body":{"components/HomeComponent.html":{},"components/VideoCallComponent.html":{}}}],["this.handleanswer(msg",{"_index":591,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.handlecandidate(msg",{"_index":593,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.handleclose(0",{"_index":672,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.handleclose(msg",{"_index":595,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.handlelist.find(el",{"_index":607,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.handleoffer(msg",{"_index":589,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.handleready(msg",{"_index":587,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.icons?.clickedicon",{"_index":219,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.icons?.defaulticon",{"_index":216,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.iscallstarted.emit",{"_index":651,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.list.findindex(item",{"_index":729,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.list.push",{"_index":727,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.list.shift",{"_index":724,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.list.splice(index",{"_index":731,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.localdefaultview",{"_index":866,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.localstream",{"_index":641,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.localstream?.gettracks().foreach((track:mediastreamtrack",{"_index":638,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.localstream?.gettracks().foreach(track",{"_index":644,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.debug('endcall",{"_index":669,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.debug('joinroom",{"_index":670,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.debug('mediastream",{"_index":671,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.debug('p2pservice",{"_index":605,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.debug('streams",{"_index":634,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.debug('video",{"_index":880,"title":{},"body":{"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["this.logger.debug('videotrack",{"_index":861,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.logger.error('addicecandidate",{"_index":656,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.error('mediarecorder",{"_index":494,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.logger.error('mediastreamservice",{"_index":527,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["this.logger.error('p2pservice",{"_index":612,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.error('setremotedescription",{"_index":662,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.error('videocall",{"_index":879,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.logger.info('createpeerconnection",{"_index":622,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.info('mediarecorderservice",{"_index":482,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.logger.info('p2pservice",{"_index":673,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.logger.info('socket",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["this.logger.info('stream",{"_index":873,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.logger.warn('mediarecorder",{"_index":498,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediarecorder",{"_index":476,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediarecorder?.addeventlistener('dataavailable",{"_index":478,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediarecorder?.addeventlistener('start",{"_index":481,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediarecorder?.addeventlistener('stop",{"_index":484,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediarecorder?.start",{"_index":500,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediarecorder?.stop",{"_index":497,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.mediastream",{"_index":523,"title":{},"body":{"injectables/MediaStreamService.html":{},"components/VideoComponent.html":{}}}],["this.mediastream.changeaudio",{"_index":868,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.mediastream.changevideo",{"_index":869,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.mediastream.create(this.mediastreamconstraints).then(stream",{"_index":872,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.mediastream.getstream()?.gettracks().foreach(track",{"_index":870,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.mediastream?.getaudiotracks().foreach(track",{"_index":534,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["this.mediastream?.getvideotracks().foreach(track",{"_index":536,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["this.model",{"_index":776,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["this.notifications.add",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["this.notifications.add(data",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["this.onclick.emit",{"_index":212,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.options",{"_index":461,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.p2p-connector.iscallstarted.subscribe",{"_index":856,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.p2p-connector.joinroom(this.userid",{"_index":877,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.p2p-connector.setlocalstream(stream",{"_index":878,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.pc",{"_index":623,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc.onicecandidate",{"_index":625,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc.ontrack",{"_index":633,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc.signalingstate",{"_index":653,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc?.addicecandidate",{"_index":655,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc?.addicecandidate(message).catch(e",{"_index":657,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc?.addtrack(track",{"_index":640,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc?.close",{"_index":624,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc?.setremotedescription(message).catch(e",{"_index":661,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.pc?.signalingstate",{"_index":642,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.record",{"_index":488,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.recorder.setstream(stream",{"_index":876,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.remotedefaultview",{"_index":854,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.remotestream",{"_index":636,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.route.snapshot.parammap.get('companionid')?.tostring",{"_index":844,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.router.navigate",{"_index":647,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(objecturl",{"_index":489,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["this.searchresult",{"_index":770,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["this.sendmediastreaminfo(this.mediastream.getstream",{"_index":857,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.socket.emit('joinroom",{"_index":320,"title":{},"body":{"components/HomeComponent.html":{},"injectables/P2pService.html":{}}}],["this.socket.emit('leaveroom",{"_index":646,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.socket.emit('mediastreaminfo",{"_index":863,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.socket.emit('message",{"_index":617,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.socket.emit('pushnotification",{"_index":316,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.socket.on('connected",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["this.socket.on('mediastreaminfo",{"_index":853,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["this.socket.on('message",{"_index":604,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.socket.on('pushnotification",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["this.srcurl",{"_index":937,"title":{},"body":{"components/VideoComponent.html":{}}}],["this.startcall(message",{"_index":650,"title":{},"body":{"injectables/P2pService.html":{}}}],["this.statusclass",{"_index":214,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.statusclick",{"_index":211,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.userid",{"_index":319,"title":{},"body":{"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["this.usernovideoimage",{"_index":867,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"interfaces/NotificationModel.html":{},"components/PushNotificationComponent.html":{}}}],["top",{"_index":708,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["track.enabled",{"_index":535,"title":{},"body":{"injectables/MediaStreamService.html":{}}}],["track.kind",{"_index":860,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["track.stop",{"_index":645,"title":{},"body":{"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["tracks",{"_index":874,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["transform",{"_index":332,"title":{},"body":{"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"components/VideoCallComponent.html":{}}}],["transform(value",{"_index":333,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["transform(value:any",{"_index":340,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["true",{"_index":430,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"injectables/GlobalStoreService.html":{},"interfaces/HandleListModel.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IconsModel.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"interfaces/LogsModel.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"interfaces/MessageModel.html":{},"interfaces/NotificationModel.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"interfaces/RecordModel.html":{},"components/SearchEngineComponent.html":{},"interfaces/SearchEngineModel.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.replace('%c",{"_index":421,"title":{},"body":{"injectables/LoggerService.html":{}}}],["undefined",{"_index":457,"title":{},"body":{"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"interfaces/RecordModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["unit",{"_index":1019,"title":{},"body":{"index.html":{}}}],["unset",{"_index":264,"title":{},"body":{"components/HeaderComponent.html":{}}}],["uppercase",{"_index":386,"title":{},"body":{"components/LoggerComponent.html":{}}}],["url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/MediaRecorderService.html":{},"interfaces/RecordModel.html":{},"miscellaneous/variables.html":{}}}],["url('../../../assets/video",{"_index":888,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["use",{"_index":1011,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":798,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["user",{"_index":322,"title":{},"body":{"components/HomeComponent.html":{}}}],["userid",{"_index":242,"title":{},"body":{"injectables/GlobalStoreService.html":{},"components/HomeComponent.html":{},"injectables/P2pService.html":{},"components/VideoCallComponent.html":{}}}],["usermediap2p",{"_index":852,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["usernovideoimage",{"_index":806,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["v0.1",{"_index":354,"title":{},"body":{"components/LoggerComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HomeComponent.html":{},"pipes/KeysPipe.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/P2pService.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"miscellaneous/variables.html":{}}}],["value.item[value.key",{"_index":342,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["values",{"_index":788,"title":{},"body":{"components/SearchEngineComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["variable",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1048,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":994,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1023,"title":{},"body":{"index.html":{}}}],["video",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/MediaStreamService.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"interfaces/StylesModel.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"miscellaneous/variables.html":{}}}],["video.component.html",{"_index":917,"title":{},"body":{"components/VideoComponent.html":{}}}],["video.component.scss",{"_index":916,"title":{},"body":{"components/VideoComponent.html":{}}}],["video/call/:companionid",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["video/logger",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["video/webm",{"_index":466,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["videocall",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["videocallcomponent",{"_index":56,"title":{"components/VideoCallComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["videocomponent",{"_index":59,"title":{"components/VideoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videotrack",{"_index":858,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["videotrack.enabled",{"_index":864,"title":{},"body":{"components/VideoCallComponent.html":{}}}],["void",{"_index":191,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoggerComponent.html":{},"injectables/LoggerService.html":{},"injectables/MediaRecorderService.html":{},"injectables/MediaStreamService.html":{},"injectables/P2pService.html":{},"components/PushNotificationComponent.html":{},"injectables/PushNotificationService.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{},"components/VideoComponent.html":{}}}],["warn",{"_index":358,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["warn(name",{"_index":406,"title":{},"body":{"injectables/LoggerService.html":{}}}],["websocket",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["weight",{"_index":384,"title":{},"body":{"components/LoggerComponent.html":{},"injectables/LoggerService.html":{}}}],["width",{"_index":220,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["window.url.createobjecturl",{"_index":487,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["word",{"_index":696,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["wrap",{"_index":276,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggerComponent.html":{},"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{}}}],["writes",{"_index":501,"title":{},"body":{"injectables/MediaRecorderService.html":{}}}],["ws",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["x",{"_index":684,"title":{},"body":{"components/PushNotificationComponent.html":{}}}],["yes",{"_index":306,"title":{},"body":{"components/HomeComponent.html":{},"injectables/PushNotificationService.html":{},"components/VideoCallComponent.html":{}}}],["z",{"_index":692,"title":{},"body":{"components/PushNotificationComponent.html":{},"components/SearchEngineComponent.html":{},"components/VideoCallComponent.html":{}}}],["zone.js",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'videoCall'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\ttitle = 'videoCall';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nAppModule -->\n\nButtonComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nAppModule -->\n\nKeysPipe->AppModule\n\n\n\n\n\nLoggerComponent\n\nLoggerComponent\n\nAppModule -->\n\nLoggerComponent->AppModule\n\n\n\n\n\nPushNotificationComponent\n\nPushNotificationComponent\n\nAppModule -->\n\nPushNotificationComponent->AppModule\n\n\n\n\n\nSearchEngineComponent\n\nSearchEngineComponent\n\nAppModule -->\n\nSearchEngineComponent->AppModule\n\n\n\n\n\nVideoCallComponent\n\nVideoCallComponent\n\nAppModule -->\n\nVideoCallComponent->AppModule\n\n\n\n\n\nVideoComponent\n\nVideoComponent\n\nAppModule -->\n\nVideoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            KeysPipe\n                        \n                        \n                            LoggerComponent\n                        \n                        \n                            PushNotificationComponent\n                        \n                        \n                            SearchEngineComponent\n                        \n                        \n                            VideoCallComponent\n                        \n                        \n                            VideoComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouterModule} from '@angular/router';\n\nimport {AppComponent} from './app.component';\nimport {VideoCallComponent} from './components/call/call.component';\nimport {VideoComponent} from './components/video/video.component';\nimport {LoggerComponent} from './components/logger/logger.component';\nimport {SearchEngineComponent} from './components/search-engine/search-engine.component';\nimport {KeysPipe} from \"./pipes/keys.pipe\";\nimport { HeaderComponent } from './components/header/header.component';\nimport {SocketIoModule, SocketIoConfig, Socket} from 'ngx-socket-io';\nimport {LoggerService} from \"./services/logger/logger.service\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ButtonComponent } from './components/ui/button/button.component';\nimport { PushNotificationComponent } from './components/push-notification/push-notification.component';\nimport {PushNotificationService} from \"./services/push-notification/push-notification.service\";\nimport { HomeComponent } from './components/home/home.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {NotificationModel} from \"./models/push-notification/notification.model\";\n\nconst prodUrl = 'https://you-need.ru';\nconst devUrl = 'http://localhost:4000';\nconst config: SocketIoConfig = { url: devUrl, options: {} };\nconst routes = [\n\t//{path: '', redirectTo: 'video', pathMatch: 'full', component: HomeComponent},\n\t{path: 'video', component: HomeComponent},\n\t{path: 'video/logger', component: LoggerComponent},\n\t{path: 'video/call/:companionId', component: VideoCallComponent},\n\t{path: '**', component: HomeComponent}\n];\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tVideoCallComponent,\n\t\tVideoComponent,\n\t\tLoggerComponent,\n\t\tSearchEngineComponent,\n\t\tKeysPipe,\n  \t\tHeaderComponent,\n    \tButtonComponent,\n\t\tPushNotificationComponent,\n\t\tHomeComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tRouterModule.forRoot(routes),\n\t\tSocketIoModule.forRoot(config),\n\t\tFontAwesomeModule,\n\t\tFormsModule,\n\t],\n\tproviders: [],\n\tbootstrap: [AppComponent]\n})\n\nexport class AppModule {\n\n\tconstructor(\n\t\tprivate socket: Socket,\n\t\tprivate Logger: LoggerService,\n\t\tprivate notifications: PushNotificationService\n\t) {\n\n\t\tthis.socket.on('pushNotification', (data: NotificationModel) => {\n\t\t\tthis.notifications.add(data);\n\t\t});\n\n\t\tthis.socket.on('connected', (id: string) => {\n\t\t\tthis.Logger.info('Socket connection id', id);\n\t\t\tthis.notifications.add({\n\t\t\t\trecipient: '1',\n\t\t\t\ttype: 'global',\n\t\t\t\ttitle: 'WebSocket',\n\t\t\t\tmessage: 'You are subscribed on ws server, your id: ' + id\n\t\t\t});\n\t\t});\n\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/UI/button/button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                currentIcon\n                            \n                            \n                                    Public\n                                statusClass\n                            \n                            \n                                    Public\n                                    Optional\n                                statusClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeIcon\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/UI/button/button.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icons\n                    \n                \n                \n                    \n                        Type :         IconsModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/UI/button/button.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/UI/button/button.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/UI/button/button.component.ts:20\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UI/button/button.component.ts:22\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeIcon\n                        \n                    \n                \n            \n            \n                \nchangeIcon()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in src/app/components/UI/button/button.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UI/button/button.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition | IconProp\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/UI/button/button.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'not-active'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/UI/button/button.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        statusClick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/UI/button/button.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, Input, OnInit, EventEmitter, Output} from '@angular/core';\nimport {LoggerService} from \"../../../services/logger/logger.service\";\nimport {IconsModel} from \"../../../models/UI/button/icons.model\";\nimport {IconDefinition} from \"@fortawesome/free-solid-svg-icons\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\n\n@Component({\n\tselector: 'app-button',\n\ttemplateUrl: './button.component.html',\n\tstyleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n\tpublic statusClick?: boolean = false;\n\tpublic currentIcon?: IconDefinition | IconProp;\n\tpublic statusClass: string = 'not-active';\n\n\t@Input() icons?: IconsModel;\n\t@Input() text?: string;\n\t@Output() onClick = new EventEmitter();\n\n\t@HostListener('click') changeIcon() {\n\t\tthis.statusClick = !this.statusClick;\n\t\tthis.onClick.emit();\n\t\tif(!this.statusClick) {\n\t\t\tthis.statusClass = 'not-active';\n\t\t\tthis.currentIcon = this.icons?.defaultIcon;\n\n\t\t\treturn;\n\t\t}\n\t\tif(this.icons?.clickedIcon) {\n\t\t\tthis.statusClass = 'active';\n\t\t\tthis.currentIcon = this.icons?.clickedIcon;\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate Logger: LoggerService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.currentIcon = this.icons?.defaultIcon;\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t{{ text }}\n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                button {\n\twidth: 200px;\n\theight: 40px;\n\tbackground: #70FFD3;\n\tborder: 0;\n\tcolor: #16331E;\n\tborder-radius: 4px;\n\tcursor: pointer;\n}\n\nbutton.active {\n\tbackground: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalStoreService.html":{"url":"injectables/GlobalStoreService.html","title":"injectable - GlobalStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/global-store/global-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/global-store/global-store.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/global-store/global-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LoggerService} from \"../logger/logger.service\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GlobalStoreService {\n\n\tpublic userId?: string;\n\n\tconstructor(\n\t\tprivate Logger: LoggerService\n\t) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandleListModel.html":{"url":"interfaces/HandleListModel.html","title":"interface - HandleListModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandleListModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/p2p-connector/handle-list.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            call\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        call\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        call:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HandleListModel {\n\ttype: string;\n\tcall: Function;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                globalStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalStore: GlobalStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalStore\n                                                  \n                                                        \n                                                                        GlobalStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/header.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        globalStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalStoreService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {GlobalStoreService} from \"../../services/global-store/global-store.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n\t  public globalStore: GlobalStoreService\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\t\n\t\n\t\tYour ID: {{ globalStore.userId || 'unset' }}\n\t\tHome\n\t\tLogger\n\t\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                header {\n\twidth: 100%;\n\tmin-height: 60px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tbackground: #1A2022;\n\n\t#logo {\n\t\twidth: 150px;\n\t\tmargin-left: 20px;\n\t}\n\n\tnav {\n\t\tmin-height: 60px;\n\t\twidth: 50%;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: center;\n\t\tmargin-left: auto;\n\n\t\ta {\n\t\t\tmin-height: 60px;\n\t\t\tmin-width: 100px;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tcolor: #C9D3D6;\n\t\t\ttext-decoration: none;\n\t\t}\n\n\t\ta:hover {\n\t\t\tborder-bottom: 1px solid #fff;\n\t\t\tcolor: #eee;\n\t\t}\n\n\t}\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\tYour ID: {{ globalStore.userId || \\'unset\\' }}\t\tHome\t\tLogger\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                companionId\n                            \n                            \n                                    Public\n                                globalStore\n                            \n                            \n                                    Public\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Optional\n                                recipient\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                sendNotification\n                            \n                            \n                                    Public\n                                setUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalStore: GlobalStoreService, socket: Socket)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalStore\n                                                  \n                                                        \n                                                                        GlobalStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendNotification(recipient?: string, title?: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recipient\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        companionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '2'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        globalStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalStoreService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Hello'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        recipient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '2'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Super title'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GlobalStoreService} from \"../../services/global-store/global-store.service\";\nimport {PushNotificationService} from \"../../services/push-notification/push-notification.service\";\nimport {Socket} from \"ngx-socket-io\";\n\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n\tpublic userId?: string = '1';\n\tpublic companionId?: string = '2';\n\tpublic recipient?: string = '2';\n\tpublic title?: string = 'Super title';\n\tpublic message?: string = 'Hello';\n\n\tconstructor(\n\t\tpublic globalStore: GlobalStoreService,\n\t\tprivate socket: Socket\n\t) {}\n\n\tpublic sendNotification(recipient?: string, title?: string, message?: string) {\n\t\tthis.socket.emit('pushNotification', {\n\t\t\tid: Math.random(),\n\t\t\trecipient: recipient,\n\t\t\ttype: 'global',\n\t\t\ttitle: title,\n\t\t\tmessage: message\n\t\t});\n\t}\n\n\tpublic setUserId(): void {\n\t\tthis.globalStore.userId = this.userId;\n\t\tthis.socket.emit('joinRoom', this.userId);\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n}\n\n    \n\n    \n        \nSet Global ID\n\n\nCall User\n\n\n\n\n\n \n \n\nSend Push\n\n\n{{ globalStore.userId }}{{ companionId }}\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Set Global IDCall User  Send Push{{ globalStore.userId }}{{ companionId }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconsModel.html":{"url":"interfaces/IconsModel.html","title":"interface - IconsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/UI/button/icons.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            clickedIcon\n                                        \n                                \n                                \n                                        \n                                            defaultIcon\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clickedIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clickedIcon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultIcon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IconDefinition} from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface IconsModel {\n\tdefaultIcon: IconDefinition;\n\tclickedIcon?: IconDefinition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/keys.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/keys.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Pipe } from '@angular/core';\nimport {LogsModel} from \"../models/logger/logs.model\";\n\n@Pipe({name: 'keys'})\nexport class KeysPipe implements PipeTransform {\n\ttransform(value:any, ...args:any[]) : any {\n\t\treturn value.item[value.key]\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggerComponent.html":{"url":"components/LoggerComponent.html","title":"component - LoggerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoggerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/logger/logger.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logger\n            \n\n            \n                styleUrls\n                ./logger.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logger.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Logger\n                            \n                            \n                                    Public\n                                prettyprint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/logger/logger.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/logger/logger.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logger/logger.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prettyprint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : prettyPrintJson\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logger/logger.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoggerService} from \"../../services/logger/logger.service\";\nimport { prettyPrintJson } from 'pretty-print-json';\n\n@Component({\n\tselector: 'app-logger',\n\ttemplateUrl: './logger.component.html',\n\tstyleUrls: ['./logger.component.scss']\n})\nexport class LoggerComponent implements OnInit {\n\n\tpublic prettyprint = prettyPrintJson;\n\n\tconstructor(\n\t\tpublic Logger: LoggerService\n\t) {}\n\n\tngOnInit(): void {\n\t}\n\n}\n\n    \n\n    \n        \n\n\n\n\tLogger v0.1\n\t\n\t\t{{ log.type }}\n\t\t{{ log.name }}\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./logger.component.scss\n                \n                $info-color: #00A1FF;\n$warn-color: #FF901C;\n$error-color: #FF3E52;\n$debug-color: #A9FFA3;\n$name-color: #A8B2B5;\n$message-color: #C9D3D6;\n$type-background: #040B0D;\n$log-background: #1A2022;\n\n@mixin flexbox() {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-content: center;\n\tflex-wrap: wrap;\n}\n\n.container {\n\t@include flexbox;\n\twidth: 100%;\n\n\t.title {\n\t\tbackground: $type-background;\n\t\tcolor: $error-color;\n\t\tfont-size: 13px;\n\t\tmargin-left: auto;\n\t\tpadding: 5px;\n\t}\n\n\t.log {\n\t\t@include flexbox;\n\t\twidth: 100%;\n\t\tjustify-content: flex-start;\n\t\tbackground: $log-background;\n\t\tfont-family: Arial, sans-serif;\n\t\tborder-bottom: 1px solid $name-color;\n\n\t\t.item {\n\t\t\t@include flexbox;\n\t\t\tmin-height: 30px;\n\t\t\tpadding: 10px;\n\t\t\tfont-weight: initial;\n\t\t\ttext-transform: uppercase;\n\n\t\t}\n\n\t\t.json-container {\n\t\t\tbackground: rgba(255,255,255, .1);\n\t\t}\n\n\t\t.type {\n\t\t\theight: 20px;\n\t\t\tbackground: $type-background;\n\t\t\tcolor: #eee;\n\t\t\tfont-size: 13px;\n\t\t\tpadding: 0 10px 0 10px;\n\t\t\tmargin: 10px 0 10px 10px;\n\t\t}\n\n\t\t.type-debug {\n\t\t\tcolor: $debug-color;\n\t\t}\n\n\t\t.type-info {\n\t\t\tcolor: $info-color;\n\t\t}\n\n\t\t.type-warn {\n\t\t\tcolor: $warn-color;\n\t\t}\n\n\t\t.type-error {\n\t\t\tcolor: $error-color;\n\t\t}\n\n\t\t.name {\n\t\t\tfont-weight: bold;\n\t\t\tcolor: $name-color;\n\t\t}\n\n\t\t.message {\n\t\t\ttext-transform: none;\n\t\t\tcolor: $message-color;\n\t\t}\n\n\t}\n\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tLogger v0.1\t\t\t{{ log.type }}\t\t{{ log.name }}\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                __console\n                            \n                            \n                                    Public\n                                    Optional\n                                __logs\n                            \n                            \n                                    Private\n                                __prefix\n                            \n                            \n                                    Private\n                                __styleGen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createLog\n                            \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logger/logger.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(name: string, type: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/logger.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'Created debug log'\n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'debug'\n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(name: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(name: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(name: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/logger.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(name: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/logger.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        __console\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Console\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/logger/logger.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        __logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogsModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/logger/logger.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '%cLogger'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/logger/logger.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __styleGen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/logger/logger.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogsModel} from \"../../models/logger/logs.model\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class LoggerService {\n\n\tprivate __console?: Console;\n\tprivate __prefix: string = '%cLogger';\n\tprivate __styleGen: Function = (c: string, lastElem: boolean): string => {\n\t\treturn `color: ${c}; background: #000; padding: 5px; font-weight: bold; border-right: ${lastElem ? 'none' : '1px solid #555'}`\n\t}\n\tpublic __logs?: LogsModel[] = [];\n\n\tconstructor() {\n\t\tthis.__console = console;\n\t}\n\n\tprotected createLog(name: string = 'Created debug log', type: string = 'debug', ...args: any[]): string {\n\t\tconst log = {name, type, message: args};\n\t\tlog.name = name.replace('%c', '').replace('%c', ' ');\n\t\tlog.type = type.replace('%c', ' ');\n\t\tthis.__logs?.push(log);\n\t\treturn name + type;\n\t}\n\n\tpublic error(name: string = '', ...args: any[]): void {\n\t\tthis.__console?.error(\n\t\t\tthis.createLog(this.__prefix + '%c' + name, '%cerror', ...args),\n\t\t\tthis.__styleGen('#E4FF00'), // Prefix color\n\t\t\tthis.__styleGen('#FFFFFF'), // Name color\n\t\t\tthis.__styleGen('#FF3E2B', true), // Type color\n\t\t\t...args,\n\t\t);\n\t}\n\n\tpublic warn(name: string = '', ...args: any[]): void {\n\t\tthis.__console?.warn(\n\t\t\tthis.createLog(this.__prefix + '%c' + name, '%cwarn', ...args),\n\t\t\tthis.__styleGen('#E4FF00'), // Prefix color\n\t\t\tthis.__styleGen('#FFFFFF'), // Name color\n\t\t\tthis.__styleGen('#FF9E00', true), // Type color\n\t\t\t...args,\n\t\t);\n\t}\n\n\tpublic info(name: string = '', ...args: any[]): void {\n\t\tthis.__console?.info(\n\t\t\tthis.createLog(this.__prefix + '%c' + name, '%cinfo', ...args),\n\t\t\tthis.__styleGen('#E4FF00'), // Prefix color\n\t\t\tthis.__styleGen('#FFFFFF'), // Name color\n\t\t\tthis.__styleGen('#22F0FF', true), // Type color\n\t\t\t...args,\n\t\t);\n\t}\n\n\tpublic debug(name: string = '', ...args: any[]): void {\n\t\tthis.__console?.log(\n\t\t\tthis.createLog(this.__prefix + '%c' + name, '%cdebug', ...args),\n\t\t\tthis.__styleGen('#E4FF00'), // Prefix color\n\t\t\tthis.__styleGen('#FFFFFF'), // Name color\n\t\t\tthis.__styleGen('#0CFF00', true), // Type color\n\t\t\t...args,\n\t\t);\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsModel.html":{"url":"interfaces/LogsModel.html","title":"interface - LogsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/logger/logs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsModel {\n\tname: string;\n\ttype: string;\n\tmessage: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaRecorderService.html":{"url":"injectables/MediaRecorderService.html","title":"injectable - MediaRecorderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaRecorderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/media-recorder/media-recorder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                mediaRecorder\n                            \n                            \n                                    Private\n                                options\n                            \n                            \n                                    Public\n                                    Optional\n                                record\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setStream\n                            \n                            \n                                    Public\n                                startRecording\n                            \n                            \n                                    Public\n                                stopRecording\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/media-recorder/media-recorder.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-recorder/media-recorder.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStream(stream: MediaStream | undefined, options: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-recorder/media-recorder.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    stream\n                                    \n                                            MediaStream | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.options\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        startRecording\n                        \n                    \n                \n            \n            \n                \n                    \n                    startRecording()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-recorder/media-recorder.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stopRecording\n                        \n                    \n                \n            \n            \n                \n                    \n                    stopRecording()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-recorder/media-recorder.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        mediaRecorder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaRecorder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/media-recorder/media-recorder.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmimeType: 'video/webm'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/media-recorder/media-recorder.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        record\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecordModel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/media-recorder/media-recorder.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {RecordModel} from \"../../models/media-recorder/record.model\";\nimport {LoggerService} from \"../logger/logger.service\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class MediaRecorderService implements OnInit {\n\n\tprivate mediaRecorder?: MediaRecorder;\n\tprivate options: Object = {\n\t\tmimeType: 'video/webm'\n\t}\n\n\tpublic record?:RecordModel;\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer,\n\t\tprivate Logger: LoggerService\n\t) {}\n\n\tpublic ngOnInit(): void {\n\n\t}\n\n\tpublic setStream(stream: MediaStream | undefined, options:Object = this.options): void {\n\t\tif(stream) {\n\t\t\tconst chunks: Blob[] = [];\n\t\t\tthis.mediaRecorder = new MediaRecorder(stream, options);\n\n\t\t\tthis.mediaRecorder?.addEventListener('dataavailable', (e:BlobEvent) => {\n\t\t\t\tchunks.push(e.data);\n\t\t\t});\n\n\t\t\tthis.mediaRecorder?.addEventListener('start', () => {\n\t\t\t\tthis.Logger.info('MediaRecorderService', 'MediaRecorder started');\n\t\t\t});\n\n\t\t\tthis.mediaRecorder?.addEventListener('stop', () => {\n\t\t\t\tconst blob = new Blob(chunks, { 'type' : 'video/webm' });\n\t\t\t\tconst objectUrl = window.URL.createObjectURL( blob );\n\t\t\t\tthis.record = {\n\t\t\t\t\tblob: blob,\n\t\t\t\t\turl: this.sanitizer.bypassSecurityTrustUrl(objectUrl)\n\t\t\t\t};\n\t\t\t\tconsole.log(blob)\n\t\t\t\tchunks.length = 0;\n\t\t\t\tthis.Logger.info('MediaRecorderService', 'MediaRecorder stopped');\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic stopRecording(): void {\n\t\tif(!this.mediaRecorder) return this.Logger.error('MediaRecorder', 'Stream is undefined');\n\t\tif(this.mediaRecorder?.state === 'recording') {\n\t\t\tthis.mediaRecorder?.stop();\n\n\t\t\treturn;\n\t\t}\n\t\tthis.Logger.warn('MediaRecorder', 'MediaRecorder inactive');\n\n\t}\n\n\tpublic startRecording(): void {\n\t\tif(!this.mediaRecorder) return this.Logger.error('MediaRecorder', 'Stream is undefined');\n\t\tif(this.mediaRecorder?.state === 'inactive') {\n\t\t\tthis.mediaRecorder?.start();\n\n\t\t\treturn;\n\t\t}\n\t\tthis.Logger.warn('MediaRecorder', 'MediaRecorder writes down')\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaStreamService.html":{"url":"injectables/MediaStreamService.html","title":"injectable - MediaStreamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaStreamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/media-devices/media-devices.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                mediaStream\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeAudio\n                            \n                            \n                                    Public\n                                changeVideo\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                getStream\n                            \n                            \n                                    Private\n                                    Async\n                                getUserMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/media-devices/media-devices.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeAudio\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAudio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-devices/media-devices.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeVideo\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeVideo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-devices/media-devices.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(constraints: MediaStreamConstraints)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-devices/media-devices.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constraints\n                                    \n                                            MediaStreamConstraints\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-devices/media-devices.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MediaStream | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserMedia\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserMedia(constraints: MediaStreamConstraints)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/media-devices/media-devices.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constraints\n                                    \n                                            MediaStreamConstraints\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        mediaStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaStream\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/media-devices/media-devices.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LoggerService} from \"../logger/logger.service\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MediaStreamService {\n\n\tprivate mediaStream?: MediaStream;\n\n\tconstructor(\n\t\tprivate Logger: LoggerService\n\t) {}\n\n\tpublic getStream(): MediaStream | undefined {\n\t\treturn this.mediaStream;\n\t}\n\n\tprivate async getUserMedia(constraints: MediaStreamConstraints): Promise {\n\t\tawait navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n\t\t\tthis.mediaStream = stream;\n\t\t\treturn stream;\n\t\t}).catch(e => {\n\t\t\tthis.Logger.error('mediaStreamService', 'getUserMedia', e);\n\t\t\tthis.mediaStream = new MediaStream();\n\t\t});\n\t\treturn this.mediaStream\n\t}\n\n\tpublic async create(constraints: MediaStreamConstraints): Promise {\n\t\tconst { video, audio } = constraints;\n\t\treturn this.getUserMedia(constraints).catch(_ => {\n\t\t\treturn this.getUserMedia({video, audio: false}).catch(_ => {\n\t\t\t\tthis.mediaStream = undefined;\n\t\t\t\treturn this.getUserMedia({video: false, audio}).catch(_ => {\n\t\t\t\t\tthis.mediaStream = new MediaStream();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic changeAudio(): void {\n\t\tthis.mediaStream?.getAudioTracks().forEach(track => track.enabled = !track.enabled);\n\t}\n\n\tpublic changeVideo(): void {\n\t\tthis.mediaStream?.getVideoTracks().forEach(track => track.enabled = !track.enabled);\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageModel.html":{"url":"interfaces/MessageModel.html","title":"interface - MessageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/p2p-connector/message.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MessageModel {\n\ttype: string;\n\tmessage: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationModel.html":{"url":"interfaces/NotificationModel.html","title":"interface - NotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/push-notification/notification.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            recipient\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NotificationModel {\n\tid?: number;\n\trecipient: string;\n\ttype: string;\n\ttitle: string;\n\tmessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/P2pService.html":{"url":"injectables/P2pService.html","title":"injectable - P2pService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  P2pService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/p2p-connector/p2p-connector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                companionId\n                            \n                            \n                                    Private\n                                    Readonly\n                                handleList\n                            \n                            \n                                    Public\n                                isCallStarted\n                            \n                            \n                                    Public\n                                    Optional\n                                localStream\n                            \n                            \n                                    Public\n                                    Optional\n                                pc\n                            \n                            \n                                    Public\n                                    Optional\n                                remoteStream\n                            \n                            \n                                    Private\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createPeerConnection\n                            \n                            \n                                    Public\n                                    Async\n                                endCall\n                            \n                            \n                                    Private\n                                    Async\n                                handleAnswer\n                            \n                            \n                                    Private\n                                    Async\n                                handleCandidate\n                            \n                            \n                                    Private\n                                    Async\n                                handleClose\n                            \n                            \n                                    Private\n                                    Async\n                                handleOffer\n                            \n                            \n                                    Private\n                                    Async\n                                handleReady\n                            \n                            \n                                    Public\n                                joinRoom\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLocalStream\n                            \n                            \n                                    Private\n                                    Async\n                                startCall\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService, socket: Socket, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createPeerConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPeerConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        endCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    endCall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleAnswer\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAnswer(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleCandidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleCandidate(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleClose\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClose(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOffer(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleReady(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        joinRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    joinRoom(userId: string, companionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setLocalStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocalStream(stream: MediaStream)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stream\n                                    \n                                            MediaStream\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        startCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    startCall(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/p2p-connector/p2p-connector.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        companionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        handleList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HandleListModel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\ttype: 'ready',\n\t\t\tcall: (msg: any) => this.handleReady(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'offer',\n\t\t\tcall: (msg: any) => this.handleOffer(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'answer',\n\t\t\tcall: (msg: any) => this.handleAnswer(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'candidate',\n\t\t\tcall: (msg: any) => this.handleCandidate(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'close',\n\t\t\tcall: (msg: any) => this.handleClose(msg),\n\t\t}\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isCallStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        localStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaStream\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        pc\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RTCPeerConnection\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        remoteStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaStream\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/p2p-connector/p2p-connector.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, OnInit} from '@angular/core';\nimport {Socket} from \"ngx-socket-io\";\nimport {MessageModel} from \"../../models/p2p-connector/message.model\";\nimport {LoggerService} from \"../logger/logger.service\";\nimport {HandleListModel} from \"../../models/p2p-connector/handleList.model\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class P2pService implements OnInit {\n\n\tprivate companionId?: string;\n\tprivate userId?: string;\n\tpublic pc?: RTCPeerConnection = undefined;\n\tpublic localStream?: MediaStream;\n\tpublic remoteStream?: MediaStream;\n\tprivate readonly handleList: HandleListModel[] = [\n\t\t{\n\t\t\ttype: 'ready',\n\t\t\tcall: (msg: any) => this.handleReady(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'offer',\n\t\t\tcall: (msg: any) => this.handleOffer(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'answer',\n\t\t\tcall: (msg: any) => this.handleAnswer(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'candidate',\n\t\t\tcall: (msg: any) => this.handleCandidate(msg),\n\t\t},\n\t\t{\n\t\t\ttype: 'close',\n\t\t\tcall: (msg: any) => this.handleClose(msg),\n\t\t}\n\t];\n\tpublic isCallStarted: EventEmitter = new EventEmitter();\n\n\tconstructor(\n\t\tprivate Logger: LoggerService,\n\t\tprivate socket: Socket,\n\t\tprivate router: Router\n\t) {\n\t\tthis.socket.on('message', (data: MessageModel) => {\n\t\t\tthis.Logger.debug('p2pService new message', data);\n\t\t\tconst elem = this.handleList.find(el => el.type === data.type);\n\t\t\tif(elem) return elem.call(data.message);\n\t\t\tthis.Logger.error('p2pService', 'Message type not found');\n\t\t});\n\t}\n\n\tprivate async startCall(message: any): Promise {\n\t\tawait this.createPeerConnection().then(async pc => {\n\t\t\tconst offer = await pc.createOffer({offerToReceiveVideo: true, offerToReceiveAudio: true});\n\t\t\tthis.socket.emit('message', {\n\t\t\t\tid: this.companionId,\n\t\t\t\ttype: 'offer',\n\t\t\t\tmessage: {\n\t\t\t\t\tsdp: offer?.sdp\n\t\t\t\t}\n\t\t\t});\n\t\t\tawait pc.setLocalDescription(offer);\n\t\t});\n\t}\n\n\tprivate async createPeerConnection(): Promise {\n\n\t\tthis.Logger.info('createPeerConnection', this.pc);\n\n\t\tthis.pc?.close();\n\t\tthis.pc = undefined;\n\n\t\tthis.pc = new RTCPeerConnection();\n\t\tthis.pc.onicecandidate = (e:RTCPeerConnectionIceEvent) => {\n\n\t\t\tif(e.candidate) {\n\t\t\t\tthis.socket.emit('message', {\n\t\t\t\t\tid: this.companionId,\n\t\t\t\t\ttype: 'candidate',\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tcandidate: e.candidate.candidate,\n\t\t\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.socket.emit('message', {\n\t\t\t\tid: this.companionId,\n\t\t\t\ttype: 'candidate',\n\t\t\t\tmessage: {\n\t\t\t\t\tcandidate: undefined,\n\t\t\t\t\tsdpMid: undefined,\n\t\t\t\t\tsdpMLineIndex: undefined,\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t\tthis.pc.ontrack = e => {\n\t\t\tthis.Logger.debug('streams', e.streams[0].getTracks());\n\t\t\tthis.remoteStream = e.streams[0];\n\t\t}\n\t\tthis.localStream?.getTracks().forEach((track:MediaStreamTrack) => {\n\t\t\tif(this.localStream) {\n\t\t\t\tthis.pc?.addTrack(track, this.localStream);\n\t\t\t}\n\t\t});\n\n\t\treturn this.pc\n\t}\n\n\tprivate async handleClose(message: any): Promise {\n\t\tif (this.pc?.signalingState !== 'closed') {\n\t\t\tthis.pc?.close();\n\t\t}\n\t\tthis.localStream?.getTracks().forEach(track => track.stop());\n\t\tthis.localStream = undefined;\n\t\tthis.remoteStream = undefined;\n\t\tthis.socket.emit('leaveRoom', this.userId);\n\t\tawait this.router.navigate(['']);\n\t}\n\n\tprivate async handleReady(message: any): Promise {\n\t\tif (this.pc) {\n\t\t\tthis.Logger.error('P2pService ready', 'Already in call, ignoring');\n\t\t\treturn;\n\t\t}\n\t\tawait this.startCall(message);\n\t}\n\n\tprivate async handleCandidate(message: any): Promise {\n\t\tthis.isCallStarted.emit();\n\t\tif (!this.pc) {\n\t\t\tthis.Logger.error('p2pService', 'handleCandidate: ', 'no peerconnection');\n\t\t\treturn;\n\t\t}\n\t\tif (this.pc.signalingState !== 'closed') {\n\t\t\tif (!message.candidate) {\n\n\t\t\t\tawait this.pc?.addIceCandidate({\n\t\t\t\t\tcandidate: undefined,\n\t\t\t\t\tsdpMid: undefined,\n\t\t\t\t\tsdpMLineIndex: undefined,\n\t\t\t\t}).catch(e => {\n\t\t\t\t\tthis.Logger.error('addIceCandidate 1', e);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.pc?.addIceCandidate(message).catch(e => {\n\t\t\t\tthis.Logger.error('addIceCandidate 2', 'message', message);\n\t\t\t\tthis.Logger.error('addIceCandidate 2', e);\n\t\t\t});\n\t\t} else this.Logger.error('addIceCandidate 2', 'signaling state', this.pc.signalingState);\n\t}\n\n\tprivate async handleAnswer(message: any): Promise {\n\t\tif (!this.pc) {\n\t\t\tthis.Logger.error('p2pService', 'handleAnswer: ', 'no peerconnection');\n\t\t\treturn;\n\t\t}\n\t\tif(this.pc.signalingState !== 'closed') {\n\t\t\tawait this.pc?.setRemoteDescription(message).catch(e => {\n\t\t\t\tthis.Logger.error('setRemoteDescription 1', message, e);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async handleOffer(message: any): Promise {\n\t\tif (this.pc) {\n\t\t\tthis.Logger.error('p2pService', 'handle offer: ', 'existing peerconnection');\n\t\t\treturn;\n\t\t}\n\t\tawait this.createPeerConnection().then(async pc => {\n\t\t\tawait pc.setRemoteDescription(message).catch(e => {\n\t\t\t\tthis.Logger.error('setRemoteDescription 2', message, e);\n\t\t\t});\n\n\t\t\tconst answer = await pc.createAnswer();\n\t\t\tawait pc.setLocalDescription(answer);\n\t\t\tthis.socket.emit('message', { id: this.companionId, type: 'answer', message: { sdp: answer.sdp } });\n\t\t});\n\t}\n\n\tpublic async endCall(): Promise {\n\t\tthis.Logger.debug('endCall');\n\t\tthis.socket.emit('message', { id: this.companionId, type: 'close', message: {} });\n\t}\n\n\tpublic joinRoom(userId: string, companionId: string): void {\n\t\tthis.Logger.debug('joinRoom', {userId, companionId});\n\t\tthis.userId = userId;\n\t\tthis.companionId = companionId;\n\t\tthis.socket.emit('joinRoom', userId);\n\t}\n\n\tpublic setLocalStream(stream: MediaStream): void {\n\t\tthis.Logger.debug('MediaStream', stream);\n\t\tthis.localStream = stream;\n\t\tthis.socket.emit('message', { id: this.companionId, type: 'ready', message: {} });\n\t}\n\n\tpublic ngOnInit(): void {\n\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.handleClose(0);\n\t\tthis.socket.emit('message', { id: this.companionId, type: 'close', message: {} });\n\t\tthis.Logger.info('p2pService', 'destroyed');\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PushNotificationComponent.html":{"url":"components/PushNotificationComponent.html","title":"component - PushNotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PushNotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/push-notification/push-notification.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-push-notification\n            \n\n            \n                styleUrls\n                ./push-notification.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./push-notification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService, notifications: PushNotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/push-notification/push-notification.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                        PushNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/push-notification/push-notification.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PushNotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/push-notification/push-notification.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoggerService} from \"../../services/logger/logger.service\";\nimport {PushNotificationService} from \"../../services/push-notification/push-notification.service\";\nimport {NotificationModel} from \"../../models/push-notification/notification.model\";\n\n@Component({\n\tselector: 'app-push-notification',\n\ttemplateUrl: './push-notification.component.html',\n\tstyleUrls: ['./push-notification.component.scss']\n})\nexport class PushNotificationComponent implements OnInit {\n\n\tconstructor(\n\t\tprivate Logger: LoggerService,\n\t\tpublic notifications: PushNotificationService\n\t) {}\n\n\tngOnInit(): void {\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t{{ notification.title }}\n\t\t\tx\n\t\t\n\t\t{{ notification.message }}\n\t\n\n\n    \n\n    \n                \n                    ./push-notification.component.scss\n                \n                \n@keyframes hideNotification {\n\t0% {\n\t\topacity: 1;\n\t}\n\t100% {\n\t\topacity: 0;\n\t}\n}\n\n.container {\n\twidth: 300px;\n\tposition: absolute;\n\tz-index: 999;\n\tright: 20px;\n\tbottom: 20px;\n\n\t.notification {\n\t\twidth: 100%;\n\t\tmargin: 15px auto;\n\t\tbackground: #1D1C1B;\n\t\tborder: 1px solid #000;\n\t\tborder-radius: 4px;\n\t\tword-wrap: break-word;\n\t\tbox-shadow: 0 0 4px #000;\n\t\tanimation: 4s hideNotification linear;\n\t\tanimation-fill-mode: forwards;\n\t\tanimation-delay: 10s;\n\n\t\t.title {\n\t\t\tmin-height: 30px;\n\t\t\ttext-align: center;\n\t\t\tbackground: #1D1C1B;\n\t\t\tcolor: #fff;\n\t\t\tborder-bottom: 1px solid #000;\n\t\t\tborder-top-left-radius: 4px;\n\t\t\tborder-top-right-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t.message {\n\t\t\tbackground: #545352;\n\t\t\tcolor: #fff;\n\t\t\tpadding: 20px 10px 20px 10px;\n\t\t\tborder-bottom-left-radius: 4px;\n\t\t\tborder-bottom-right-radius: 4px;\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t.close {\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tposition: absolute;\n\t\t\tright: 0;\n\t\t\ttop: 5px;\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t.close:hover {\n\t\t\tcolor: red;\n\t\t}\n\n\t}\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ notification.title }}\t\t\tx\t\t\t\t{{ notification.message }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PushNotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PushNotificationService.html":{"url":"injectables/PushNotificationService.html","title":"injectable - PushNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PushNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/push-notification/push-notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/push-notification/push-notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(data: NotificationModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notification/push-notification.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                NotificationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notification/push-notification.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/push-notification/push-notification.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LoggerService} from \"../logger/logger.service\";\nimport {NotificationModel} from \"../../models/push-notification/notification.model\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PushNotificationService {\n\n\tpublic readonly list: NotificationModel[] = [];\n\n\tconstructor(\n\t\tprivate Logger: LoggerService\n\t) {\n\t\tsetInterval(() => {\n\t\t\tif(this.list.length > 0) {\n\t\t\t\tthis.list.shift();\n\t\t\t\tconsole.log(this.list);\n\t\t\t}\n\t\t}, 15000);\n\t}\n\n\tpublic add(data: NotificationModel): void {\n\t\tthis.list.push({\n\t\t\tid: Math.random(),\n\t\t\t...data\n\t\t});\n\t\tif(this.list.length > 5) this.list.shift();\n\t}\n\n\tpublic remove(id?: number): void {\n\t\tconst index = this.list.findIndex(item => item.id === id);\n\t\tthis.list.splice(index, 1);\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecordModel.html":{"url":"interfaces/RecordModel.html","title":"interface - RecordModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecordModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/media-recorder/record.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blob\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blob\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blob:     Blob | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Blob | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     SafeUrl | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeUrl | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {SafeUrl} from \"@angular/platform-browser\";\n\nexport interface RecordModel {\n\tblob?: Blob | undefined;\n\turl?: SafeUrl | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchEngineComponent.html":{"url":"components/SearchEngineComponent.html","title":"component - SearchEngineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchEngineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search-engine/search-engine.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-engine\n            \n\n            \n                styleUrls\n                ./search-engine.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-engine.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                model\n                            \n                            \n                                    Public\n                                Object\n                            \n                            \n                                    Public\n                                    Optional\n                                searchResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                find\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search-engine/search-engine.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collection\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/search-engine/search-engine.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(options: Object[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-engine/search-engine.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            Object[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(element: SearchEngineModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-engine/search-engine.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                SearchEngineModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { key: '', searchValue: '' }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-engine/search-engine.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search-engine/search-engine.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/search-engine/search-engine.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Object\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object\n                    \n                \n                    \n                        \n                                Defined in src/app/components/search-engine/search-engine.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        searchResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Object[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/search-engine/search-engine.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\nimport {SearchEngineModel} from \"../../models/search-engine/search-engine.model\";\nimport {LoggerService} from \"../../services/logger/logger.service\";\n\n@Component({\n\tselector: 'app-search-engine',\n\ttemplateUrl: './search-engine.component.html',\n\tstyleUrls: ['./search-engine.component.scss']\n})\nexport class SearchEngineComponent implements OnInit {\n\n\t@Input() collection?:any[];\n\tpublic searchResult?:Object[];\n\tpublic model?:string[];\n\tpublic Object = Object;\n\n\tconstructor(\n\t\tprivate Logger: LoggerService\n\t) {}\n\n\tpublic find( element:SearchEngineModel = { key: '', searchValue: '' } ): void {\n\t\tif(element.searchValue) {\n\t\t\tthis.searchResult = this.collection?.filter(el => {\n\t\t\t\tif(element.key.length > 0 && el[element.key]?.toLowerCase().indexOf(element.searchValue.toLowerCase()) > -1) {\n\t\t\t\t\treturn el\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn\n\t\t}\n\n\t\tthis.searchResult = [];\n\t}\n\n\tpublic filter(options:Object[]): void {\n\t\tthis.collection?.filter(el => {\n\n\t\t})\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis.model = Object.keys(changes['collection'].currentValue[0]);\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\n\t\tselect property\n\t\t{{item}}\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\t{{ key }}:\n\t\t\t\t{{ {item, key} | keys | json }}\n\t\t\t\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./search-engine.component.scss\n                \n                \n@mixin input() {\n\theight: 30px;\n\tpadding: 10px;\n\toutline: none;\n}\n\n.container {\n\twidth: 100%;\n\theight: 50px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tposition: relative;\n\n\tinput {\n\t\t@include input;\n\t\twidth: 50vw;\n\t\tborder: 1px solid #ccc\n\t}\n\n\tselect {\n\t\t@include input;\n\t\twidth: 150px;\n\t\tcolor: #1A2022;\n\t\ttext-align: center;\n\t\tpadding: 0;\n\t\tmargin-left: 10px;\n\t\tborder: 1px solid #1A2022;\n\t}\n\n\t.search-result {\n\t\tmin-height: 200px;\n\t\twidth: calc(50vw + 160px);\n\t\tposition: absolute;\n\t\ttop: 40px;\n\t\tz-index: 999;\n\n\t\t.item {\n\t\t\twidth: 50vw;\n\t\t\tmin-height: 30px;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-start;\n\t\t\talign-items: center;\n\t\t\tflex-wrap: wrap;\n\t\t\tborder-bottom: 8px solid #1A2022;\n\n\t\t\t.values {\n\t\t\t\twidth: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: flex-start;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground: #333;\n\t\t\t\tborder-bottom: 1px solid #555;\n\t\t\t}\n\n\t\t\t.key, .value {\n\t\t\t\tmin-height: 20px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground: #1A2022;\n\t\t\t\tcolor: #eee;\n\t\t\t\tfont-size: 13px;\n\t\t\t\tpadding: 5px;\n\t\t\t\tmargin-left: 5px;\n\t\t\t}\n\n\t\t\t.value {\n\t\t\t\tmin-height: 30px;\n\t\t\t\tbackground: none;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\tselect property\t\t{{item}}\t\t\t\t\t\t\t\t\t\t\t{{ key }}:\t\t\t\t{{ {item, key} | keys | json }}\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchEngineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchEngineModel.html":{"url":"interfaces/SearchEngineModel.html","title":"interface - SearchEngineModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchEngineModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/search-engine/search-engine.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            searchValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchValue:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SearchEngineModel {\n\tkey: string;\n\tsearchValue: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StylesModel.html":{"url":"interfaces/StylesModel.html","title":"interface - StylesModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StylesModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/video/styles.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            defaultView\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultView\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultView:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StylesModel {\n\tvideo?: Object;\n\tdefaultView?: Object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoCallComponent.html":{"url":"components/VideoCallComponent.html","title":"component - VideoCallComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoCallComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/call/call.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MediaStreamService\n                                MediaRecorderService\n                                {\n    provide: , useClass: P2pService\n}\n                \n            \n\n\n            \n                selector\n                app-call\n            \n\n            \n                styleUrls\n                ./call.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./call.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                companionId\n                            \n                            \n                                    Private\n                                companionNoVideoImage\n                            \n                            \n                                    Public\n                                icons\n                            \n                            \n                                    Public\n                                    Optional\n                                localDefaultView\n                            \n                            \n                                    Public\n                                mediaStream\n                            \n                            \n                                    Private\n                                mediaStreamConstraints\n                            \n                            \n                                    Public\n                                p2p-connector\n                            \n                            \n                                    Public\n                                recorder\n                            \n                            \n                                    Public\n                                    Optional\n                                remoteDefaultView\n                            \n                            \n                                    Public\n                                    Optional\n                                userId\n                            \n                            \n                                    Private\n                                userNoVideoImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeAudio\n                            \n                            \n                                    Public\n                                    Async\n                                changeVideo\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                sendMediaStreamInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mediaStream: MediaStreamService, recorder: MediaRecorderService, p2p-connector: P2pService, Logger: LoggerService, route: ActivatedRoute, socket: Socket, globalStore: GlobalStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/call/call.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mediaStream\n                                                  \n                                                        \n                                                                        MediaStreamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recorder\n                                                  \n                                                        \n                                                                        MediaRecorderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        p2p-connector\n                                                  \n                                                        \n                                                                        P2pService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalStore\n                                                  \n                                                        \n                                                                        GlobalStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeAudio\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeAudio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/call/call.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        changeVideo\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeVideo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/call/call.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/call/call.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/call/call.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sendMediaStreamInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMediaStreamInfo(stream?: MediaStream)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/call/call.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stream\n                                    \n                                            MediaStream\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        companionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.globalStore.userId\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        companionNoVideoImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tfaPhoneSlash,\n\t\tfaMicrophone,\n\t\tfaVideo,\n\t\tfaFileVideo,\n\t\tfaStop,\n\t\tfaVideoSlash,\n\t\tfaMicrophoneSlash,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        localDefaultView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mediaStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaStreamService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mediaStreamConstraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaStreamConstraints\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tvideo: {\n\t\t\twidth: { min: 1024, ideal: 1280, max: 1920 },\n\t\t\theight: { min: 576, ideal: 720, max: 1080 },\n\t\t},\n\t\taudio: true\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        p2p-connector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         P2pService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('userMediaP2p')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recorder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaRecorderService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        remoteDefaultView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.paramMap.get('companionId')?.toString() || ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userNoVideoImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/call/call.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit, SimpleChanges} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n\nimport {MediaRecorderService} from \"../../services/media-recorder/media-recorder.service\";\nimport {LoggerService} from \"../../services/logger/logger.service\";\nimport {MediaStreamService} from \"../../services/media-devices/media-devices.service\";\nimport {P2pService} from \"../../services/p2p-connector/p2p-connector.service\";\nimport {Socket} from \"ngx-socket-io\";\nimport {\n\tfaPhoneSlash,\n\tfaMicrophone,\n\tfaMicrophoneSlash,\n\tfaVideo,\n\tfaVideoSlash,\n\tfaFileVideo,\n\tfaStop\n} from '@fortawesome/free-solid-svg-icons';\nimport {GlobalStoreService} from \"../../services/global-store/global-store.service\";\n\n@Component({\n\tselector: 'app-call',\n\ttemplateUrl: './call.component.html',\n\tstyleUrls: ['./call.component.scss'],\n\tproviders: [MediaStreamService, MediaRecorderService, {\n\t\tprovide: 'userMediaP2p',\n\t\tuseClass: P2pService\n\t}]\n})\nexport class VideoCallComponent implements OnInit {\n\n\tpublic userId?: string = this.route.snapshot.paramMap.get('companionId')?.toString() || '';\n\tpublic companionId?: string = this.globalStore.userId;\n\tpublic localDefaultView?: string;\n\tpublic remoteDefaultView?: string;\n\tprivate userNoVideoImage: string = 'https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg';\n\tprivate companionNoVideoImage: string = 'https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg';\n\tprivate mediaStreamConstraints: MediaStreamConstraints = {\n\t\tvideo: {\n\t\t\twidth: { min: 1024, ideal: 1280, max: 1920 },\n\t\t\theight: { min: 576, ideal: 720, max: 1080 },\n\t\t},\n\t\taudio: true\n\t};\n\tpublic icons = {\n\t\tfaPhoneSlash,\n\t\tfaMicrophone,\n\t\tfaVideo,\n\t\tfaFileVideo,\n\t\tfaStop,\n\t\tfaVideoSlash,\n\t\tfaMicrophoneSlash,\n\t};\n\n\tconstructor(\n\t\tpublic mediaStream: MediaStreamService,\n\t\tpublic recorder: MediaRecorderService,\n\t\t@Inject('userMediaP2p') public p2p-connector: P2pService,\n\t\tprivate Logger: LoggerService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate socket: Socket,\n\t\tprivate globalStore: GlobalStoreService\n\t) {\n\t\tthis.socket.on('mediaStreamInfo', ( video: boolean ) => {\n\t\t\tthis.remoteDefaultView = video ? undefined : this.companionNoVideoImage;\n\t\t});\n\t\tthis.p2p-connector.isCallStarted.subscribe(() => {\n\t\t\tthis.sendMediaStreamInfo(this.mediaStream.getStream());\n\t\t});\n\t}\n\n\tprivate sendMediaStreamInfo(stream?: MediaStream): void {\n\t\tconst videoTrack = stream?.getTracks().find(track => track.kind === 'video');\n\t\tthis.Logger.debug('videoTrack', videoTrack);\n\t\tif(videoTrack) {\n\t\t\tthis.socket.emit('mediaStreamInfo', {\n\t\t\t\tid: this.companionId,\n\t\t\t\tvideo: videoTrack.enabled\n\t\t\t});\n\t\t\tif(videoTrack.enabled) {\n\t\t\t\tthis.localDefaultView = undefined;\n\t\t\t} else {\n\t\t\t\tthis.localDefaultView = this.userNoVideoImage;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tthis.localDefaultView = this.userNoVideoImage;\n\t\tthis.socket.emit('mediaStreamInfo', {\n\t\t\tid: this.companionId,\n\t\t\tvideo: false\n\t\t});\n\t}\n\n\tpublic changeAudio(): void {\n\t\tthis.mediaStream.changeAudio();\n\t}\n\n\tpublic async changeVideo(): Promise {\n\t\tawait this.mediaStream.changeVideo();\n\t\tthis.sendMediaStreamInfo(this.mediaStream.getStream());\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.mediaStream.getStream()?.getTracks().forEach(track => track.stop());\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tif(this.userId && this.userId !== this.companionId) {\n\t\t\tthis.mediaStream.create(this.mediaStreamConstraints).then(stream => {\n\n\t\t\t\tthis.Logger.info('STREAM tracks', stream.getTracks());\n\n\t\t\t\tthis.sendMediaStreamInfo(this.mediaStream.getStream());\n\t\t\t\tthis.recorder.setStream(stream);\n\t\t\t\tif(this.userId && this.companionId) {\n\t\t\t\t\tthis.p2p-connector.joinRoom(this.userId, this.companionId);\n\t\t\t\t\tthis.p2p-connector.setLocalStream(stream);\n\t\t\t\t}\n\t\t\t\treturn stream\n\t\t\t}).catch(e => this.Logger.error('VideoCall mediastream', e));\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.Logger.debug('Video-call', \"You can't call your self\");\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\n\n\t\n\n\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n\n\n\tYou can't start video call with your self.\n\n\n\n\tAuthorization required.\n\n\n    \n\n    \n                \n                    ./call.component.scss\n                \n                \n.error {\n\twidth: 100vw;\n\theight: calc(100vh - 60px);\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.container {\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tbackground: url('../../../assets/call-bg.png');\n\tposition: relative;\n\n\t::ng-deep .localVideo {\n\n\t\t.container {\n\t\t\tposition: absolute;\n\t\t\tz-index: 999;\n\t\t}\n\n\t\tvideo, img {\n\t\t\twidth: 300px;\n\t\t\theight: 200px;\n\t\t}\n\n\t}\n\n\t::ng-deep .localOffVideo {\n\t\t.container {\n\t\t\tposition: absolute;\n\t\t\tz-index: 999;\n\t\t\tleft: 0;\n\t\t}\n\n\t\timg {\n\t\t\twidth: 300px;\n\t\t\theight: 200px;\n\t\t}\n\t}\n\n\t::ng-deep app-video {\n\t\tvideo {\n\t\t\ttransform: scaleX(-1);\n\t\t\tmargin-right: auto;\n\t\t\tobject-fit: cover;\n\t\t}\n\t}\n\n\t::ng-deep .record {\n\n\t\t.container {\n\t\t\tposition: absolute;\n\t\t\tz-index: 999;\n\t\t\tright: 0;\n\t\t}\n\n\t\tvideo {\n\t\t\twidth: 300px;\n\t\t\theight: 200px;\n\t\t\ttransform: scaleX(1);\n\t\t}\n\t}\n\n\t::ng-deep .remoteVideo {\n\t\t.container {\n\t\t\twidth: 100%;\n\n\t\t\tvideo, img {\n\t\t\t\twidth: 100vw;\n\t\t\t\theight: 100vh;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t::ng-deep .remoteOffVideo {\n\t\t.container {\n\t\t\twidth: 100%;\n\n\t\t\timg {\n\t\t\t\twidth: 100vw;\n\t\t\t\tmax-height: 100vh;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t::ng-deep app-video {\n\t\tmargin-right: auto;\n\t}\n\n\t::ng-deep app-button {\n\n\t\tbutton {\n\t\t\twidth: 50px;\n\t\t\theight: 50px;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tbackground: #2B2A29;\n\t\t\tcolor: #fff;\n\t\t\tfont-size: 17px;\n\t\t\tborder: 0;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-left: 10px;\n\t\t\tcursor: pointer;\n\n\t\t}\n\n\t\t.active {\n\t\t\tbackground: #FF392F !important;\n\t\t}\n\n\t\t.active:hover {\n\t\t\tbackground: #FF6452 !important;\n\t\t}\n\n\t\tbutton:hover {\n\t\t\tbackground: #3A3938;\n\t\t}\n\n\t}\n\n\t::ng-deep #hangup {\n\t\tbutton {\n\t\t\tbackground: #FF392F;\n\t\t}\n\n\t\tbutton:hover {\n\t\t\tbackground: #FF6452;\n\t\t}\n\t}\n\n\t.controlPanel {\n\t\twidth: 100%;\n\t\theight: 90px;\n\t\tdisplay: flex;\n\t\tbackground: #191817;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tz-index: 999;\n\n\t}\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\tYou can\\'t start video call with your self.\tAuthorization required.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoCallComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoComponent.html":{"url":"components/VideoComponent.html","title":"component - VideoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/video/video.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-video\n            \n\n            \n                styleUrls\n                ./video.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getStream\n                            \n                            \n                                    Public\n                                getUrl\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controls\n                            \n                            \n                                defaultView\n                            \n                            \n                                mediaStream\n                            \n                            \n                                muted\n                            \n                            \n                                srcUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/video/video.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controls\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/video/video.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultView\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/video/video.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mediaStream\n                    \n                \n                \n                    \n                        Type :     MediaStream\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/video/video.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/video/video.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        srcUrl\n                    \n                \n                \n                    \n                        Type :         SafeUrl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/video/video.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/video/video.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MediaStream | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/video/video.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SafeUrl | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/video/video.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/video/video.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit, SimpleChanges} from '@angular/core';\nimport {LoggerService} from \"../../services/logger/logger.service\";\nimport {SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n\tselector: 'app-video',\n\ttemplateUrl: './video.component.html',\n\tstyleUrls: ['./video.component.scss']\n})\nexport class VideoComponent implements OnInit {\n\n\t@Input() mediaStream?: MediaStream;\n\t@Input() srcUrl?: SafeUrl;\n\t@Input() defaultView?: string = 'https://avatarko.ru/img/kartinka/33/multfilm_lyagushka_32117.jpg';\n\t@Input() muted?:boolean;\n\t@Input() controls?:boolean;\n\n\tconstructor(\n\t\tprivate Logger: LoggerService\n\t) {}\n\n\tpublic ngOnInit(): void {}\n\n\tpublic ngOnChanges(changes: SimpleChanges): void {\n\t\tthis.Logger.debug('video changes', changes['defaultView']?.currentValue, changes['defaultView']);\n\t}\n\n\tpublic getUrl(): SafeUrl | undefined {\n\t\tif(this.srcUrl) this.defaultView = undefined;\n\t\treturn this.srcUrl\n\t}\n\n\tpublic getStream(): MediaStream | undefined {\n\t\treturn this.mediaStream\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\n\t\n\n\n\n    \n\n    \n                \n                    ./video.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoggerComponent', 'selector': 'app-logger'},{'name': 'PushNotificationComponent', 'selector': 'app-push-notification'},{'name': 'SearchEngineComponent', 'selector': 'app-search-engine'},{'name': 'VideoCallComponent', 'selector': 'app-call'},{'name': 'VideoComponent', 'selector': 'app-video'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            devUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            prodUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/UI/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/logger/logger.component.ts\n            \n            component\n            LoggerComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/push-notification/push-notification.component.ts\n            \n            component\n            PushNotificationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/search-engine/search-engine.component.ts\n            \n            component\n            SearchEngineComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/call/call.component.ts\n            \n            component\n            VideoCallComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/video/video.component.ts\n            \n            component\n            VideoComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/UI/button/icons.model.ts\n            \n            interface\n            IconsModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/logger/logs.model.ts\n            \n            interface\n            LogsModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/media-recorder/record.model.ts\n            \n            interface\n            RecordModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/p2p-connector/handle-list.model.ts\n            \n            interface\n            HandleListModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/p2p-connector/message.model.ts\n            \n            interface\n            MessageModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/push-notification/notification.model.ts\n            \n            interface\n            NotificationModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/search-engine/search-engine.model.ts\n            \n            interface\n            SearchEngineModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/video/styles.model.ts\n            \n            interface\n            StylesModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/global-store/global-store.service.ts\n            \n            injectable\n            GlobalStoreService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/media-recorder/media-recorder.service.ts\n            \n            injectable\n            MediaRecorderService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/media-devices/media-devices.service.ts\n            \n            injectable\n            MediaStreamService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/p2p-connector/p2p-connector.service.ts\n            \n            injectable\n            P2pService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/push-notification/push-notification.service.ts\n            \n            injectable\n            PushNotificationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @fortawesome/angular-fontawesome : ^0.11.1\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.2\n        \n            express : ^4.18.1\n        \n            ngx-socket-io : ^4.3.0\n        \n            nodemon : ^2.0.19\n        \n            peerjs : ^1.4.6\n        \n            pretty-print-json : ^1.2.5\n        \n            rxjs : ~7.5.0\n        \n            socket.io : ^4.5.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nVideoCall\nThis project was generated with Angular CLI version 14.0.6.\nDevelopment server\n123\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nAppModule -->\n\nButtonComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nAppModule -->\n\nKeysPipe->AppModule\n\n\n\n\n\nLoggerComponent\n\nLoggerComponent\n\nAppModule -->\n\nLoggerComponent->AppModule\n\n\n\n\n\nPushNotificationComponent\n\nPushNotificationComponent\n\nAppModule -->\n\nPushNotificationComponent->AppModule\n\n\n\n\n\nSearchEngineComponent\n\nSearchEngineComponent\n\nAppModule -->\n\nSearchEngineComponent->AppModule\n\n\n\n\n\nVideoCallComponent\n\nVideoCallComponent\n\nAppModule -->\n\nVideoCallComponent->AppModule\n\n\n\n\n\nVideoComponent\n\nVideoComponent\n\nAppModule -->\n\nVideoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            devUrl   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            prodUrl   (src/.../app.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routes   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SocketIoConfig\n\n                    \n                \n                \n                    \n                        Default value : { url: devUrl, options: {} }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        devUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:4000'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prodUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://you-need.ru'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t//{path: '', redirectTo: 'video', pathMatch: 'full', component: HomeComponent},\n\t{path: 'video', component: HomeComponent},\n\t{path: 'video/logger', component: LoggerComponent},\n\t{path: 'video/call/:companionId', component: VideoCallComponent},\n\t{path: '**', component: HomeComponent}\n]\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
